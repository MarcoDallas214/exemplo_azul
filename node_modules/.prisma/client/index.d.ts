
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model cliente
 * 
 */
export type cliente = $Result.DefaultSelection<Prisma.$clientePayload>
/**
 * Model dados_movel
 * 
 */
export type dados_movel = $Result.DefaultSelection<Prisma.$dados_movelPayload>
/**
 * Model docs_modelo
 * 
 */
export type docs_modelo = $Result.DefaultSelection<Prisma.$docs_modeloPayload>
/**
 * Model formas_pagto
 * 
 */
export type formas_pagto = $Result.DefaultSelection<Prisma.$formas_pagtoPayload>
/**
 * Model documentos
 * 
 */
export type documentos = $Result.DefaultSelection<Prisma.$documentosPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Clientes
 * const clientes = await prisma.cliente.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Clientes
   * const clientes = await prisma.cliente.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.cliente`: Exposes CRUD operations for the **cliente** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clientes
    * const clientes = await prisma.cliente.findMany()
    * ```
    */
  get cliente(): Prisma.clienteDelegate<ExtArgs>;

  /**
   * `prisma.dados_movel`: Exposes CRUD operations for the **dados_movel** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Dados_movels
    * const dados_movels = await prisma.dados_movel.findMany()
    * ```
    */
  get dados_movel(): Prisma.dados_movelDelegate<ExtArgs>;

  /**
   * `prisma.docs_modelo`: Exposes CRUD operations for the **docs_modelo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Docs_modelos
    * const docs_modelos = await prisma.docs_modelo.findMany()
    * ```
    */
  get docs_modelo(): Prisma.docs_modeloDelegate<ExtArgs>;

  /**
   * `prisma.formas_pagto`: Exposes CRUD operations for the **formas_pagto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Formas_pagtos
    * const formas_pagtos = await prisma.formas_pagto.findMany()
    * ```
    */
  get formas_pagto(): Prisma.formas_pagtoDelegate<ExtArgs>;

  /**
   * `prisma.documentos`: Exposes CRUD operations for the **documentos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Documentos
    * const documentos = await prisma.documentos.findMany()
    * ```
    */
  get documentos(): Prisma.documentosDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    cliente: 'cliente',
    dados_movel: 'dados_movel',
    docs_modelo: 'docs_modelo',
    formas_pagto: 'formas_pagto',
    documentos: 'documentos'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "cliente" | "dados_movel" | "docs_modelo" | "formas_pagto" | "documentos"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      cliente: {
        payload: Prisma.$clientePayload<ExtArgs>
        fields: Prisma.clienteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.clienteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.clienteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          findFirst: {
            args: Prisma.clienteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.clienteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          findMany: {
            args: Prisma.clienteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>[]
          }
          create: {
            args: Prisma.clienteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          createMany: {
            args: Prisma.clienteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.clienteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          update: {
            args: Prisma.clienteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          deleteMany: {
            args: Prisma.clienteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.clienteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.clienteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientePayload>
          }
          aggregate: {
            args: Prisma.ClienteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCliente>
          }
          groupBy: {
            args: Prisma.clienteGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClienteGroupByOutputType>[]
          }
          count: {
            args: Prisma.clienteCountArgs<ExtArgs>
            result: $Utils.Optional<ClienteCountAggregateOutputType> | number
          }
        }
      }
      dados_movel: {
        payload: Prisma.$dados_movelPayload<ExtArgs>
        fields: Prisma.dados_movelFieldRefs
        operations: {
          findUnique: {
            args: Prisma.dados_movelFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dados_movelPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.dados_movelFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dados_movelPayload>
          }
          findFirst: {
            args: Prisma.dados_movelFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dados_movelPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.dados_movelFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dados_movelPayload>
          }
          findMany: {
            args: Prisma.dados_movelFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dados_movelPayload>[]
          }
          create: {
            args: Prisma.dados_movelCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dados_movelPayload>
          }
          createMany: {
            args: Prisma.dados_movelCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.dados_movelDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dados_movelPayload>
          }
          update: {
            args: Prisma.dados_movelUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dados_movelPayload>
          }
          deleteMany: {
            args: Prisma.dados_movelDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.dados_movelUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.dados_movelUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dados_movelPayload>
          }
          aggregate: {
            args: Prisma.Dados_movelAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDados_movel>
          }
          groupBy: {
            args: Prisma.dados_movelGroupByArgs<ExtArgs>
            result: $Utils.Optional<Dados_movelGroupByOutputType>[]
          }
          count: {
            args: Prisma.dados_movelCountArgs<ExtArgs>
            result: $Utils.Optional<Dados_movelCountAggregateOutputType> | number
          }
        }
      }
      docs_modelo: {
        payload: Prisma.$docs_modeloPayload<ExtArgs>
        fields: Prisma.docs_modeloFieldRefs
        operations: {
          findUnique: {
            args: Prisma.docs_modeloFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$docs_modeloPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.docs_modeloFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$docs_modeloPayload>
          }
          findFirst: {
            args: Prisma.docs_modeloFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$docs_modeloPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.docs_modeloFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$docs_modeloPayload>
          }
          findMany: {
            args: Prisma.docs_modeloFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$docs_modeloPayload>[]
          }
          create: {
            args: Prisma.docs_modeloCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$docs_modeloPayload>
          }
          createMany: {
            args: Prisma.docs_modeloCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.docs_modeloDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$docs_modeloPayload>
          }
          update: {
            args: Prisma.docs_modeloUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$docs_modeloPayload>
          }
          deleteMany: {
            args: Prisma.docs_modeloDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.docs_modeloUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.docs_modeloUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$docs_modeloPayload>
          }
          aggregate: {
            args: Prisma.Docs_modeloAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocs_modelo>
          }
          groupBy: {
            args: Prisma.docs_modeloGroupByArgs<ExtArgs>
            result: $Utils.Optional<Docs_modeloGroupByOutputType>[]
          }
          count: {
            args: Prisma.docs_modeloCountArgs<ExtArgs>
            result: $Utils.Optional<Docs_modeloCountAggregateOutputType> | number
          }
        }
      }
      formas_pagto: {
        payload: Prisma.$formas_pagtoPayload<ExtArgs>
        fields: Prisma.formas_pagtoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.formas_pagtoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$formas_pagtoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.formas_pagtoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$formas_pagtoPayload>
          }
          findFirst: {
            args: Prisma.formas_pagtoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$formas_pagtoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.formas_pagtoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$formas_pagtoPayload>
          }
          findMany: {
            args: Prisma.formas_pagtoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$formas_pagtoPayload>[]
          }
          create: {
            args: Prisma.formas_pagtoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$formas_pagtoPayload>
          }
          createMany: {
            args: Prisma.formas_pagtoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.formas_pagtoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$formas_pagtoPayload>
          }
          update: {
            args: Prisma.formas_pagtoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$formas_pagtoPayload>
          }
          deleteMany: {
            args: Prisma.formas_pagtoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.formas_pagtoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.formas_pagtoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$formas_pagtoPayload>
          }
          aggregate: {
            args: Prisma.Formas_pagtoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFormas_pagto>
          }
          groupBy: {
            args: Prisma.formas_pagtoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Formas_pagtoGroupByOutputType>[]
          }
          count: {
            args: Prisma.formas_pagtoCountArgs<ExtArgs>
            result: $Utils.Optional<Formas_pagtoCountAggregateOutputType> | number
          }
        }
      }
      documentos: {
        payload: Prisma.$documentosPayload<ExtArgs>
        fields: Prisma.documentosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.documentosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.documentosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentosPayload>
          }
          findFirst: {
            args: Prisma.documentosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.documentosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentosPayload>
          }
          findMany: {
            args: Prisma.documentosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentosPayload>[]
          }
          create: {
            args: Prisma.documentosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentosPayload>
          }
          createMany: {
            args: Prisma.documentosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.documentosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentosPayload>
          }
          update: {
            args: Prisma.documentosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentosPayload>
          }
          deleteMany: {
            args: Prisma.documentosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.documentosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.documentosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$documentosPayload>
          }
          aggregate: {
            args: Prisma.DocumentosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocumentos>
          }
          groupBy: {
            args: Prisma.documentosGroupByArgs<ExtArgs>
            result: $Utils.Optional<DocumentosGroupByOutputType>[]
          }
          count: {
            args: Prisma.documentosCountArgs<ExtArgs>
            result: $Utils.Optional<DocumentosCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model cliente
   */

  export type AggregateCliente = {
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  export type ClienteAvgAggregateOutputType = {
    id_cliente: number | null
    renda_mensal: Decimal | null
  }

  export type ClienteSumAggregateOutputType = {
    id_cliente: number | null
    renda_mensal: Decimal | null
  }

  export type ClienteMinAggregateOutputType = {
    id_cliente: number | null
    data_inclusao: Date | null
    data_nasc: Date | null
    nome_cliente: string | null
    estado_civil: string | null
    naturalidade: string | null
    nacionalidade: string | null
    escolaridade: string | null
    profissao: string | null
    situacao: string | null
    cpf_cliente: string | null
    rg_cliente: string | null
    renda_mensal: Decimal | null
    comprovante_renda: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClienteMaxAggregateOutputType = {
    id_cliente: number | null
    data_inclusao: Date | null
    data_nasc: Date | null
    nome_cliente: string | null
    estado_civil: string | null
    naturalidade: string | null
    nacionalidade: string | null
    escolaridade: string | null
    profissao: string | null
    situacao: string | null
    cpf_cliente: string | null
    rg_cliente: string | null
    renda_mensal: Decimal | null
    comprovante_renda: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ClienteCountAggregateOutputType = {
    id_cliente: number
    data_inclusao: number
    data_nasc: number
    nome_cliente: number
    estado_civil: number
    naturalidade: number
    nacionalidade: number
    escolaridade: number
    profissao: number
    situacao: number
    cpf_cliente: number
    rg_cliente: number
    renda_mensal: number
    comprovante_renda: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ClienteAvgAggregateInputType = {
    id_cliente?: true
    renda_mensal?: true
  }

  export type ClienteSumAggregateInputType = {
    id_cliente?: true
    renda_mensal?: true
  }

  export type ClienteMinAggregateInputType = {
    id_cliente?: true
    data_inclusao?: true
    data_nasc?: true
    nome_cliente?: true
    estado_civil?: true
    naturalidade?: true
    nacionalidade?: true
    escolaridade?: true
    profissao?: true
    situacao?: true
    cpf_cliente?: true
    rg_cliente?: true
    renda_mensal?: true
    comprovante_renda?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClienteMaxAggregateInputType = {
    id_cliente?: true
    data_inclusao?: true
    data_nasc?: true
    nome_cliente?: true
    estado_civil?: true
    naturalidade?: true
    nacionalidade?: true
    escolaridade?: true
    profissao?: true
    situacao?: true
    cpf_cliente?: true
    rg_cliente?: true
    renda_mensal?: true
    comprovante_renda?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ClienteCountAggregateInputType = {
    id_cliente?: true
    data_inclusao?: true
    data_nasc?: true
    nome_cliente?: true
    estado_civil?: true
    naturalidade?: true
    nacionalidade?: true
    escolaridade?: true
    profissao?: true
    situacao?: true
    cpf_cliente?: true
    rg_cliente?: true
    renda_mensal?: true
    comprovante_renda?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ClienteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cliente to aggregate.
     */
    where?: clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clienteOrderByWithRelationInput | clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned clientes
    **/
    _count?: true | ClienteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClienteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClienteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClienteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClienteMaxAggregateInputType
  }

  export type GetClienteAggregateType<T extends ClienteAggregateArgs> = {
        [P in keyof T & keyof AggregateCliente]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCliente[P]>
      : GetScalarType<T[P], AggregateCliente[P]>
  }




  export type clienteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: clienteWhereInput
    orderBy?: clienteOrderByWithAggregationInput | clienteOrderByWithAggregationInput[]
    by: ClienteScalarFieldEnum[] | ClienteScalarFieldEnum
    having?: clienteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClienteCountAggregateInputType | true
    _avg?: ClienteAvgAggregateInputType
    _sum?: ClienteSumAggregateInputType
    _min?: ClienteMinAggregateInputType
    _max?: ClienteMaxAggregateInputType
  }

  export type ClienteGroupByOutputType = {
    id_cliente: number
    data_inclusao: Date
    data_nasc: Date
    nome_cliente: string
    estado_civil: string
    naturalidade: string
    nacionalidade: string
    escolaridade: string
    profissao: string
    situacao: string
    cpf_cliente: string
    rg_cliente: string
    renda_mensal: Decimal
    comprovante_renda: string
    createdAt: Date
    updatedAt: Date
    _count: ClienteCountAggregateOutputType | null
    _avg: ClienteAvgAggregateOutputType | null
    _sum: ClienteSumAggregateOutputType | null
    _min: ClienteMinAggregateOutputType | null
    _max: ClienteMaxAggregateOutputType | null
  }

  type GetClienteGroupByPayload<T extends clienteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClienteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClienteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClienteGroupByOutputType[P]>
            : GetScalarType<T[P], ClienteGroupByOutputType[P]>
        }
      >
    >


  export type clienteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_cliente?: boolean
    data_inclusao?: boolean
    data_nasc?: boolean
    nome_cliente?: boolean
    estado_civil?: boolean
    naturalidade?: boolean
    nacionalidade?: boolean
    escolaridade?: boolean
    profissao?: boolean
    situacao?: boolean
    cpf_cliente?: boolean
    rg_cliente?: boolean
    renda_mensal?: boolean
    comprovante_renda?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["cliente"]>


  export type clienteSelectScalar = {
    id_cliente?: boolean
    data_inclusao?: boolean
    data_nasc?: boolean
    nome_cliente?: boolean
    estado_civil?: boolean
    naturalidade?: boolean
    nacionalidade?: boolean
    escolaridade?: boolean
    profissao?: boolean
    situacao?: boolean
    cpf_cliente?: boolean
    rg_cliente?: boolean
    renda_mensal?: boolean
    comprovante_renda?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $clientePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cliente"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_cliente: number
      data_inclusao: Date
      data_nasc: Date
      nome_cliente: string
      estado_civil: string
      naturalidade: string
      nacionalidade: string
      escolaridade: string
      profissao: string
      situacao: string
      cpf_cliente: string
      rg_cliente: string
      renda_mensal: Prisma.Decimal
      comprovante_renda: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cliente"]>
    composites: {}
  }

  type clienteGetPayload<S extends boolean | null | undefined | clienteDefaultArgs> = $Result.GetResult<Prisma.$clientePayload, S>

  type clienteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<clienteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClienteCountAggregateInputType | true
    }

  export interface clienteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cliente'], meta: { name: 'cliente' } }
    /**
     * Find zero or one Cliente that matches the filter.
     * @param {clienteFindUniqueArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends clienteFindUniqueArgs>(args: SelectSubset<T, clienteFindUniqueArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Cliente that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {clienteFindUniqueOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends clienteFindUniqueOrThrowArgs>(args: SelectSubset<T, clienteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Cliente that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteFindFirstArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends clienteFindFirstArgs>(args?: SelectSubset<T, clienteFindFirstArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Cliente that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteFindFirstOrThrowArgs} args - Arguments to find a Cliente
     * @example
     * // Get one Cliente
     * const cliente = await prisma.cliente.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends clienteFindFirstOrThrowArgs>(args?: SelectSubset<T, clienteFindFirstOrThrowArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Clientes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clientes
     * const clientes = await prisma.cliente.findMany()
     * 
     * // Get first 10 Clientes
     * const clientes = await prisma.cliente.findMany({ take: 10 })
     * 
     * // Only select the `id_cliente`
     * const clienteWithId_clienteOnly = await prisma.cliente.findMany({ select: { id_cliente: true } })
     * 
     */
    findMany<T extends clienteFindManyArgs>(args?: SelectSubset<T, clienteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Cliente.
     * @param {clienteCreateArgs} args - Arguments to create a Cliente.
     * @example
     * // Create one Cliente
     * const Cliente = await prisma.cliente.create({
     *   data: {
     *     // ... data to create a Cliente
     *   }
     * })
     * 
     */
    create<T extends clienteCreateArgs>(args: SelectSubset<T, clienteCreateArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Clientes.
     * @param {clienteCreateManyArgs} args - Arguments to create many Clientes.
     * @example
     * // Create many Clientes
     * const cliente = await prisma.cliente.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends clienteCreateManyArgs>(args?: SelectSubset<T, clienteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Cliente.
     * @param {clienteDeleteArgs} args - Arguments to delete one Cliente.
     * @example
     * // Delete one Cliente
     * const Cliente = await prisma.cliente.delete({
     *   where: {
     *     // ... filter to delete one Cliente
     *   }
     * })
     * 
     */
    delete<T extends clienteDeleteArgs>(args: SelectSubset<T, clienteDeleteArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Cliente.
     * @param {clienteUpdateArgs} args - Arguments to update one Cliente.
     * @example
     * // Update one Cliente
     * const cliente = await prisma.cliente.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends clienteUpdateArgs>(args: SelectSubset<T, clienteUpdateArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Clientes.
     * @param {clienteDeleteManyArgs} args - Arguments to filter Clientes to delete.
     * @example
     * // Delete a few Clientes
     * const { count } = await prisma.cliente.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends clienteDeleteManyArgs>(args?: SelectSubset<T, clienteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clientes
     * const cliente = await prisma.cliente.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends clienteUpdateManyArgs>(args: SelectSubset<T, clienteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cliente.
     * @param {clienteUpsertArgs} args - Arguments to update or create a Cliente.
     * @example
     * // Update or create a Cliente
     * const cliente = await prisma.cliente.upsert({
     *   create: {
     *     // ... data to create a Cliente
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cliente we want to update
     *   }
     * })
     */
    upsert<T extends clienteUpsertArgs>(args: SelectSubset<T, clienteUpsertArgs<ExtArgs>>): Prisma__clienteClient<$Result.GetResult<Prisma.$clientePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Clientes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteCountArgs} args - Arguments to filter Clientes to count.
     * @example
     * // Count the number of Clientes
     * const count = await prisma.cliente.count({
     *   where: {
     *     // ... the filter for the Clientes we want to count
     *   }
     * })
    **/
    count<T extends clienteCountArgs>(
      args?: Subset<T, clienteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClienteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClienteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClienteAggregateArgs>(args: Subset<T, ClienteAggregateArgs>): Prisma.PrismaPromise<GetClienteAggregateType<T>>

    /**
     * Group by Cliente.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clienteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends clienteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: clienteGroupByArgs['orderBy'] }
        : { orderBy?: clienteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, clienteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClienteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cliente model
   */
  readonly fields: clienteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cliente.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__clienteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cliente model
   */ 
  interface clienteFieldRefs {
    readonly id_cliente: FieldRef<"cliente", 'Int'>
    readonly data_inclusao: FieldRef<"cliente", 'DateTime'>
    readonly data_nasc: FieldRef<"cliente", 'DateTime'>
    readonly nome_cliente: FieldRef<"cliente", 'String'>
    readonly estado_civil: FieldRef<"cliente", 'String'>
    readonly naturalidade: FieldRef<"cliente", 'String'>
    readonly nacionalidade: FieldRef<"cliente", 'String'>
    readonly escolaridade: FieldRef<"cliente", 'String'>
    readonly profissao: FieldRef<"cliente", 'String'>
    readonly situacao: FieldRef<"cliente", 'String'>
    readonly cpf_cliente: FieldRef<"cliente", 'String'>
    readonly rg_cliente: FieldRef<"cliente", 'String'>
    readonly renda_mensal: FieldRef<"cliente", 'Decimal'>
    readonly comprovante_renda: FieldRef<"cliente", 'String'>
    readonly createdAt: FieldRef<"cliente", 'DateTime'>
    readonly updatedAt: FieldRef<"cliente", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * cliente findUnique
   */
  export type clienteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Filter, which cliente to fetch.
     */
    where: clienteWhereUniqueInput
  }

  /**
   * cliente findUniqueOrThrow
   */
  export type clienteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Filter, which cliente to fetch.
     */
    where: clienteWhereUniqueInput
  }

  /**
   * cliente findFirst
   */
  export type clienteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Filter, which cliente to fetch.
     */
    where?: clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clienteOrderByWithRelationInput | clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clientes.
     */
    cursor?: clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * cliente findFirstOrThrow
   */
  export type clienteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Filter, which cliente to fetch.
     */
    where?: clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clienteOrderByWithRelationInput | clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clientes.
     */
    cursor?: clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clientes.
     */
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * cliente findMany
   */
  export type clienteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Filter, which clientes to fetch.
     */
    where?: clienteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clientes to fetch.
     */
    orderBy?: clienteOrderByWithRelationInput | clienteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing clientes.
     */
    cursor?: clienteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clientes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clientes.
     */
    skip?: number
    distinct?: ClienteScalarFieldEnum | ClienteScalarFieldEnum[]
  }

  /**
   * cliente create
   */
  export type clienteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * The data needed to create a cliente.
     */
    data: XOR<clienteCreateInput, clienteUncheckedCreateInput>
  }

  /**
   * cliente createMany
   */
  export type clienteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many clientes.
     */
    data: clienteCreateManyInput | clienteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cliente update
   */
  export type clienteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * The data needed to update a cliente.
     */
    data: XOR<clienteUpdateInput, clienteUncheckedUpdateInput>
    /**
     * Choose, which cliente to update.
     */
    where: clienteWhereUniqueInput
  }

  /**
   * cliente updateMany
   */
  export type clienteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update clientes.
     */
    data: XOR<clienteUpdateManyMutationInput, clienteUncheckedUpdateManyInput>
    /**
     * Filter which clientes to update
     */
    where?: clienteWhereInput
  }

  /**
   * cliente upsert
   */
  export type clienteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * The filter to search for the cliente to update in case it exists.
     */
    where: clienteWhereUniqueInput
    /**
     * In case the cliente found by the `where` argument doesn't exist, create a new cliente with this data.
     */
    create: XOR<clienteCreateInput, clienteUncheckedCreateInput>
    /**
     * In case the cliente was found with the provided `where` argument, update it with this data.
     */
    update: XOR<clienteUpdateInput, clienteUncheckedUpdateInput>
  }

  /**
   * cliente delete
   */
  export type clienteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
    /**
     * Filter which cliente to delete.
     */
    where: clienteWhereUniqueInput
  }

  /**
   * cliente deleteMany
   */
  export type clienteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clientes to delete
     */
    where?: clienteWhereInput
  }

  /**
   * cliente without action
   */
  export type clienteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cliente
     */
    select?: clienteSelect<ExtArgs> | null
  }


  /**
   * Model dados_movel
   */

  export type AggregateDados_movel = {
    _count: Dados_movelCountAggregateOutputType | null
    _avg: Dados_movelAvgAggregateOutputType | null
    _sum: Dados_movelSumAggregateOutputType | null
    _min: Dados_movelMinAggregateOutputType | null
    _max: Dados_movelMaxAggregateOutputType | null
  }

  export type Dados_movelAvgAggregateOutputType = {
    id_dados_movel: number | null
    matricula: number | null
    numero: number | null
    num_casa: number | null
  }

  export type Dados_movelSumAggregateOutputType = {
    id_dados_movel: number | null
    matricula: number | null
    numero: number | null
    num_casa: number | null
  }

  export type Dados_movelMinAggregateOutputType = {
    id_dados_movel: number | null
    fase_imovel: string | null
    nome_empreendimento: string | null
    lote_terreno: string | null
    area_terreno: string | null
    matricula: number | null
    logradouro: string | null
    numero: number | null
    complemento: string | null
    bairro: string | null
    cep: string | null
    cidade: string | null
    estado: string | null
    num_casa: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Dados_movelMaxAggregateOutputType = {
    id_dados_movel: number | null
    fase_imovel: string | null
    nome_empreendimento: string | null
    lote_terreno: string | null
    area_terreno: string | null
    matricula: number | null
    logradouro: string | null
    numero: number | null
    complemento: string | null
    bairro: string | null
    cep: string | null
    cidade: string | null
    estado: string | null
    num_casa: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Dados_movelCountAggregateOutputType = {
    id_dados_movel: number
    fase_imovel: number
    nome_empreendimento: number
    lote_terreno: number
    area_terreno: number
    matricula: number
    logradouro: number
    numero: number
    complemento: number
    bairro: number
    cep: number
    cidade: number
    estado: number
    num_casa: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Dados_movelAvgAggregateInputType = {
    id_dados_movel?: true
    matricula?: true
    numero?: true
    num_casa?: true
  }

  export type Dados_movelSumAggregateInputType = {
    id_dados_movel?: true
    matricula?: true
    numero?: true
    num_casa?: true
  }

  export type Dados_movelMinAggregateInputType = {
    id_dados_movel?: true
    fase_imovel?: true
    nome_empreendimento?: true
    lote_terreno?: true
    area_terreno?: true
    matricula?: true
    logradouro?: true
    numero?: true
    complemento?: true
    bairro?: true
    cep?: true
    cidade?: true
    estado?: true
    num_casa?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Dados_movelMaxAggregateInputType = {
    id_dados_movel?: true
    fase_imovel?: true
    nome_empreendimento?: true
    lote_terreno?: true
    area_terreno?: true
    matricula?: true
    logradouro?: true
    numero?: true
    complemento?: true
    bairro?: true
    cep?: true
    cidade?: true
    estado?: true
    num_casa?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Dados_movelCountAggregateInputType = {
    id_dados_movel?: true
    fase_imovel?: true
    nome_empreendimento?: true
    lote_terreno?: true
    area_terreno?: true
    matricula?: true
    logradouro?: true
    numero?: true
    complemento?: true
    bairro?: true
    cep?: true
    cidade?: true
    estado?: true
    num_casa?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Dados_movelAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which dados_movel to aggregate.
     */
    where?: dados_movelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dados_movels to fetch.
     */
    orderBy?: dados_movelOrderByWithRelationInput | dados_movelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: dados_movelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dados_movels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dados_movels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned dados_movels
    **/
    _count?: true | Dados_movelCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Dados_movelAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Dados_movelSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Dados_movelMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Dados_movelMaxAggregateInputType
  }

  export type GetDados_movelAggregateType<T extends Dados_movelAggregateArgs> = {
        [P in keyof T & keyof AggregateDados_movel]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDados_movel[P]>
      : GetScalarType<T[P], AggregateDados_movel[P]>
  }




  export type dados_movelGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: dados_movelWhereInput
    orderBy?: dados_movelOrderByWithAggregationInput | dados_movelOrderByWithAggregationInput[]
    by: Dados_movelScalarFieldEnum[] | Dados_movelScalarFieldEnum
    having?: dados_movelScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Dados_movelCountAggregateInputType | true
    _avg?: Dados_movelAvgAggregateInputType
    _sum?: Dados_movelSumAggregateInputType
    _min?: Dados_movelMinAggregateInputType
    _max?: Dados_movelMaxAggregateInputType
  }

  export type Dados_movelGroupByOutputType = {
    id_dados_movel: number
    fase_imovel: string
    nome_empreendimento: string
    lote_terreno: string
    area_terreno: string
    matricula: number
    logradouro: string
    numero: number
    complemento: string | null
    bairro: string
    cep: string
    cidade: string
    estado: string
    num_casa: number
    createdAt: Date
    updatedAt: Date
    _count: Dados_movelCountAggregateOutputType | null
    _avg: Dados_movelAvgAggregateOutputType | null
    _sum: Dados_movelSumAggregateOutputType | null
    _min: Dados_movelMinAggregateOutputType | null
    _max: Dados_movelMaxAggregateOutputType | null
  }

  type GetDados_movelGroupByPayload<T extends dados_movelGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Dados_movelGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Dados_movelGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Dados_movelGroupByOutputType[P]>
            : GetScalarType<T[P], Dados_movelGroupByOutputType[P]>
        }
      >
    >


  export type dados_movelSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_dados_movel?: boolean
    fase_imovel?: boolean
    nome_empreendimento?: boolean
    lote_terreno?: boolean
    area_terreno?: boolean
    matricula?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cep?: boolean
    cidade?: boolean
    estado?: boolean
    num_casa?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["dados_movel"]>


  export type dados_movelSelectScalar = {
    id_dados_movel?: boolean
    fase_imovel?: boolean
    nome_empreendimento?: boolean
    lote_terreno?: boolean
    area_terreno?: boolean
    matricula?: boolean
    logradouro?: boolean
    numero?: boolean
    complemento?: boolean
    bairro?: boolean
    cep?: boolean
    cidade?: boolean
    estado?: boolean
    num_casa?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $dados_movelPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "dados_movel"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_dados_movel: number
      fase_imovel: string
      nome_empreendimento: string
      lote_terreno: string
      area_terreno: string
      matricula: number
      logradouro: string
      numero: number
      complemento: string | null
      bairro: string
      cep: string
      cidade: string
      estado: string
      num_casa: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["dados_movel"]>
    composites: {}
  }

  type dados_movelGetPayload<S extends boolean | null | undefined | dados_movelDefaultArgs> = $Result.GetResult<Prisma.$dados_movelPayload, S>

  type dados_movelCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<dados_movelFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Dados_movelCountAggregateInputType | true
    }

  export interface dados_movelDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['dados_movel'], meta: { name: 'dados_movel' } }
    /**
     * Find zero or one Dados_movel that matches the filter.
     * @param {dados_movelFindUniqueArgs} args - Arguments to find a Dados_movel
     * @example
     * // Get one Dados_movel
     * const dados_movel = await prisma.dados_movel.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends dados_movelFindUniqueArgs>(args: SelectSubset<T, dados_movelFindUniqueArgs<ExtArgs>>): Prisma__dados_movelClient<$Result.GetResult<Prisma.$dados_movelPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Dados_movel that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {dados_movelFindUniqueOrThrowArgs} args - Arguments to find a Dados_movel
     * @example
     * // Get one Dados_movel
     * const dados_movel = await prisma.dados_movel.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends dados_movelFindUniqueOrThrowArgs>(args: SelectSubset<T, dados_movelFindUniqueOrThrowArgs<ExtArgs>>): Prisma__dados_movelClient<$Result.GetResult<Prisma.$dados_movelPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Dados_movel that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dados_movelFindFirstArgs} args - Arguments to find a Dados_movel
     * @example
     * // Get one Dados_movel
     * const dados_movel = await prisma.dados_movel.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends dados_movelFindFirstArgs>(args?: SelectSubset<T, dados_movelFindFirstArgs<ExtArgs>>): Prisma__dados_movelClient<$Result.GetResult<Prisma.$dados_movelPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Dados_movel that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dados_movelFindFirstOrThrowArgs} args - Arguments to find a Dados_movel
     * @example
     * // Get one Dados_movel
     * const dados_movel = await prisma.dados_movel.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends dados_movelFindFirstOrThrowArgs>(args?: SelectSubset<T, dados_movelFindFirstOrThrowArgs<ExtArgs>>): Prisma__dados_movelClient<$Result.GetResult<Prisma.$dados_movelPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Dados_movels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dados_movelFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Dados_movels
     * const dados_movels = await prisma.dados_movel.findMany()
     * 
     * // Get first 10 Dados_movels
     * const dados_movels = await prisma.dados_movel.findMany({ take: 10 })
     * 
     * // Only select the `id_dados_movel`
     * const dados_movelWithId_dados_movelOnly = await prisma.dados_movel.findMany({ select: { id_dados_movel: true } })
     * 
     */
    findMany<T extends dados_movelFindManyArgs>(args?: SelectSubset<T, dados_movelFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dados_movelPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Dados_movel.
     * @param {dados_movelCreateArgs} args - Arguments to create a Dados_movel.
     * @example
     * // Create one Dados_movel
     * const Dados_movel = await prisma.dados_movel.create({
     *   data: {
     *     // ... data to create a Dados_movel
     *   }
     * })
     * 
     */
    create<T extends dados_movelCreateArgs>(args: SelectSubset<T, dados_movelCreateArgs<ExtArgs>>): Prisma__dados_movelClient<$Result.GetResult<Prisma.$dados_movelPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Dados_movels.
     * @param {dados_movelCreateManyArgs} args - Arguments to create many Dados_movels.
     * @example
     * // Create many Dados_movels
     * const dados_movel = await prisma.dados_movel.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends dados_movelCreateManyArgs>(args?: SelectSubset<T, dados_movelCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Dados_movel.
     * @param {dados_movelDeleteArgs} args - Arguments to delete one Dados_movel.
     * @example
     * // Delete one Dados_movel
     * const Dados_movel = await prisma.dados_movel.delete({
     *   where: {
     *     // ... filter to delete one Dados_movel
     *   }
     * })
     * 
     */
    delete<T extends dados_movelDeleteArgs>(args: SelectSubset<T, dados_movelDeleteArgs<ExtArgs>>): Prisma__dados_movelClient<$Result.GetResult<Prisma.$dados_movelPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Dados_movel.
     * @param {dados_movelUpdateArgs} args - Arguments to update one Dados_movel.
     * @example
     * // Update one Dados_movel
     * const dados_movel = await prisma.dados_movel.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends dados_movelUpdateArgs>(args: SelectSubset<T, dados_movelUpdateArgs<ExtArgs>>): Prisma__dados_movelClient<$Result.GetResult<Prisma.$dados_movelPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Dados_movels.
     * @param {dados_movelDeleteManyArgs} args - Arguments to filter Dados_movels to delete.
     * @example
     * // Delete a few Dados_movels
     * const { count } = await prisma.dados_movel.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends dados_movelDeleteManyArgs>(args?: SelectSubset<T, dados_movelDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dados_movels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dados_movelUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Dados_movels
     * const dados_movel = await prisma.dados_movel.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends dados_movelUpdateManyArgs>(args: SelectSubset<T, dados_movelUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Dados_movel.
     * @param {dados_movelUpsertArgs} args - Arguments to update or create a Dados_movel.
     * @example
     * // Update or create a Dados_movel
     * const dados_movel = await prisma.dados_movel.upsert({
     *   create: {
     *     // ... data to create a Dados_movel
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Dados_movel we want to update
     *   }
     * })
     */
    upsert<T extends dados_movelUpsertArgs>(args: SelectSubset<T, dados_movelUpsertArgs<ExtArgs>>): Prisma__dados_movelClient<$Result.GetResult<Prisma.$dados_movelPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Dados_movels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dados_movelCountArgs} args - Arguments to filter Dados_movels to count.
     * @example
     * // Count the number of Dados_movels
     * const count = await prisma.dados_movel.count({
     *   where: {
     *     // ... the filter for the Dados_movels we want to count
     *   }
     * })
    **/
    count<T extends dados_movelCountArgs>(
      args?: Subset<T, dados_movelCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Dados_movelCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Dados_movel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Dados_movelAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Dados_movelAggregateArgs>(args: Subset<T, Dados_movelAggregateArgs>): Prisma.PrismaPromise<GetDados_movelAggregateType<T>>

    /**
     * Group by Dados_movel.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dados_movelGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends dados_movelGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: dados_movelGroupByArgs['orderBy'] }
        : { orderBy?: dados_movelGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, dados_movelGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDados_movelGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the dados_movel model
   */
  readonly fields: dados_movelFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for dados_movel.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__dados_movelClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the dados_movel model
   */ 
  interface dados_movelFieldRefs {
    readonly id_dados_movel: FieldRef<"dados_movel", 'Int'>
    readonly fase_imovel: FieldRef<"dados_movel", 'String'>
    readonly nome_empreendimento: FieldRef<"dados_movel", 'String'>
    readonly lote_terreno: FieldRef<"dados_movel", 'String'>
    readonly area_terreno: FieldRef<"dados_movel", 'String'>
    readonly matricula: FieldRef<"dados_movel", 'Int'>
    readonly logradouro: FieldRef<"dados_movel", 'String'>
    readonly numero: FieldRef<"dados_movel", 'Int'>
    readonly complemento: FieldRef<"dados_movel", 'String'>
    readonly bairro: FieldRef<"dados_movel", 'String'>
    readonly cep: FieldRef<"dados_movel", 'String'>
    readonly cidade: FieldRef<"dados_movel", 'String'>
    readonly estado: FieldRef<"dados_movel", 'String'>
    readonly num_casa: FieldRef<"dados_movel", 'Int'>
    readonly createdAt: FieldRef<"dados_movel", 'DateTime'>
    readonly updatedAt: FieldRef<"dados_movel", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * dados_movel findUnique
   */
  export type dados_movelFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dados_movel
     */
    select?: dados_movelSelect<ExtArgs> | null
    /**
     * Filter, which dados_movel to fetch.
     */
    where: dados_movelWhereUniqueInput
  }

  /**
   * dados_movel findUniqueOrThrow
   */
  export type dados_movelFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dados_movel
     */
    select?: dados_movelSelect<ExtArgs> | null
    /**
     * Filter, which dados_movel to fetch.
     */
    where: dados_movelWhereUniqueInput
  }

  /**
   * dados_movel findFirst
   */
  export type dados_movelFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dados_movel
     */
    select?: dados_movelSelect<ExtArgs> | null
    /**
     * Filter, which dados_movel to fetch.
     */
    where?: dados_movelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dados_movels to fetch.
     */
    orderBy?: dados_movelOrderByWithRelationInput | dados_movelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for dados_movels.
     */
    cursor?: dados_movelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dados_movels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dados_movels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of dados_movels.
     */
    distinct?: Dados_movelScalarFieldEnum | Dados_movelScalarFieldEnum[]
  }

  /**
   * dados_movel findFirstOrThrow
   */
  export type dados_movelFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dados_movel
     */
    select?: dados_movelSelect<ExtArgs> | null
    /**
     * Filter, which dados_movel to fetch.
     */
    where?: dados_movelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dados_movels to fetch.
     */
    orderBy?: dados_movelOrderByWithRelationInput | dados_movelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for dados_movels.
     */
    cursor?: dados_movelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dados_movels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dados_movels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of dados_movels.
     */
    distinct?: Dados_movelScalarFieldEnum | Dados_movelScalarFieldEnum[]
  }

  /**
   * dados_movel findMany
   */
  export type dados_movelFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dados_movel
     */
    select?: dados_movelSelect<ExtArgs> | null
    /**
     * Filter, which dados_movels to fetch.
     */
    where?: dados_movelWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dados_movels to fetch.
     */
    orderBy?: dados_movelOrderByWithRelationInput | dados_movelOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing dados_movels.
     */
    cursor?: dados_movelWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dados_movels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dados_movels.
     */
    skip?: number
    distinct?: Dados_movelScalarFieldEnum | Dados_movelScalarFieldEnum[]
  }

  /**
   * dados_movel create
   */
  export type dados_movelCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dados_movel
     */
    select?: dados_movelSelect<ExtArgs> | null
    /**
     * The data needed to create a dados_movel.
     */
    data: XOR<dados_movelCreateInput, dados_movelUncheckedCreateInput>
  }

  /**
   * dados_movel createMany
   */
  export type dados_movelCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many dados_movels.
     */
    data: dados_movelCreateManyInput | dados_movelCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * dados_movel update
   */
  export type dados_movelUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dados_movel
     */
    select?: dados_movelSelect<ExtArgs> | null
    /**
     * The data needed to update a dados_movel.
     */
    data: XOR<dados_movelUpdateInput, dados_movelUncheckedUpdateInput>
    /**
     * Choose, which dados_movel to update.
     */
    where: dados_movelWhereUniqueInput
  }

  /**
   * dados_movel updateMany
   */
  export type dados_movelUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update dados_movels.
     */
    data: XOR<dados_movelUpdateManyMutationInput, dados_movelUncheckedUpdateManyInput>
    /**
     * Filter which dados_movels to update
     */
    where?: dados_movelWhereInput
  }

  /**
   * dados_movel upsert
   */
  export type dados_movelUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dados_movel
     */
    select?: dados_movelSelect<ExtArgs> | null
    /**
     * The filter to search for the dados_movel to update in case it exists.
     */
    where: dados_movelWhereUniqueInput
    /**
     * In case the dados_movel found by the `where` argument doesn't exist, create a new dados_movel with this data.
     */
    create: XOR<dados_movelCreateInput, dados_movelUncheckedCreateInput>
    /**
     * In case the dados_movel was found with the provided `where` argument, update it with this data.
     */
    update: XOR<dados_movelUpdateInput, dados_movelUncheckedUpdateInput>
  }

  /**
   * dados_movel delete
   */
  export type dados_movelDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dados_movel
     */
    select?: dados_movelSelect<ExtArgs> | null
    /**
     * Filter which dados_movel to delete.
     */
    where: dados_movelWhereUniqueInput
  }

  /**
   * dados_movel deleteMany
   */
  export type dados_movelDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which dados_movels to delete
     */
    where?: dados_movelWhereInput
  }

  /**
   * dados_movel without action
   */
  export type dados_movelDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dados_movel
     */
    select?: dados_movelSelect<ExtArgs> | null
  }


  /**
   * Model docs_modelo
   */

  export type AggregateDocs_modelo = {
    _count: Docs_modeloCountAggregateOutputType | null
    _avg: Docs_modeloAvgAggregateOutputType | null
    _sum: Docs_modeloSumAggregateOutputType | null
    _min: Docs_modeloMinAggregateOutputType | null
    _max: Docs_modeloMaxAggregateOutputType | null
  }

  export type Docs_modeloAvgAggregateOutputType = {
    id_docs_modelo: number | null
  }

  export type Docs_modeloSumAggregateOutputType = {
    id_docs_modelo: number | null
  }

  export type Docs_modeloMinAggregateOutputType = {
    id_docs_modelo: number | null
    boleto_pagto_escritura: string | null
    boleto_pagto_escritura_itbi: string | null
    boleto_pagto_escritura_registro: string | null
    promessa_compra_venda_assinado: string | null
    promessa_compra_venda_modelo: string | null
    promessa_compra_venda_preenchido: string | null
    quadro_resumo_modelo: string | null
    requerimento_cartorio_modelo: string | null
    requerimento_cartorio_preenchido: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Docs_modeloMaxAggregateOutputType = {
    id_docs_modelo: number | null
    boleto_pagto_escritura: string | null
    boleto_pagto_escritura_itbi: string | null
    boleto_pagto_escritura_registro: string | null
    promessa_compra_venda_assinado: string | null
    promessa_compra_venda_modelo: string | null
    promessa_compra_venda_preenchido: string | null
    quadro_resumo_modelo: string | null
    requerimento_cartorio_modelo: string | null
    requerimento_cartorio_preenchido: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Docs_modeloCountAggregateOutputType = {
    id_docs_modelo: number
    boleto_pagto_escritura: number
    boleto_pagto_escritura_itbi: number
    boleto_pagto_escritura_registro: number
    promessa_compra_venda_assinado: number
    promessa_compra_venda_modelo: number
    promessa_compra_venda_preenchido: number
    quadro_resumo_modelo: number
    requerimento_cartorio_modelo: number
    requerimento_cartorio_preenchido: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Docs_modeloAvgAggregateInputType = {
    id_docs_modelo?: true
  }

  export type Docs_modeloSumAggregateInputType = {
    id_docs_modelo?: true
  }

  export type Docs_modeloMinAggregateInputType = {
    id_docs_modelo?: true
    boleto_pagto_escritura?: true
    boleto_pagto_escritura_itbi?: true
    boleto_pagto_escritura_registro?: true
    promessa_compra_venda_assinado?: true
    promessa_compra_venda_modelo?: true
    promessa_compra_venda_preenchido?: true
    quadro_resumo_modelo?: true
    requerimento_cartorio_modelo?: true
    requerimento_cartorio_preenchido?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Docs_modeloMaxAggregateInputType = {
    id_docs_modelo?: true
    boleto_pagto_escritura?: true
    boleto_pagto_escritura_itbi?: true
    boleto_pagto_escritura_registro?: true
    promessa_compra_venda_assinado?: true
    promessa_compra_venda_modelo?: true
    promessa_compra_venda_preenchido?: true
    quadro_resumo_modelo?: true
    requerimento_cartorio_modelo?: true
    requerimento_cartorio_preenchido?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Docs_modeloCountAggregateInputType = {
    id_docs_modelo?: true
    boleto_pagto_escritura?: true
    boleto_pagto_escritura_itbi?: true
    boleto_pagto_escritura_registro?: true
    promessa_compra_venda_assinado?: true
    promessa_compra_venda_modelo?: true
    promessa_compra_venda_preenchido?: true
    quadro_resumo_modelo?: true
    requerimento_cartorio_modelo?: true
    requerimento_cartorio_preenchido?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Docs_modeloAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which docs_modelo to aggregate.
     */
    where?: docs_modeloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of docs_modelos to fetch.
     */
    orderBy?: docs_modeloOrderByWithRelationInput | docs_modeloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: docs_modeloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` docs_modelos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` docs_modelos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned docs_modelos
    **/
    _count?: true | Docs_modeloCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Docs_modeloAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Docs_modeloSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Docs_modeloMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Docs_modeloMaxAggregateInputType
  }

  export type GetDocs_modeloAggregateType<T extends Docs_modeloAggregateArgs> = {
        [P in keyof T & keyof AggregateDocs_modelo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocs_modelo[P]>
      : GetScalarType<T[P], AggregateDocs_modelo[P]>
  }




  export type docs_modeloGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: docs_modeloWhereInput
    orderBy?: docs_modeloOrderByWithAggregationInput | docs_modeloOrderByWithAggregationInput[]
    by: Docs_modeloScalarFieldEnum[] | Docs_modeloScalarFieldEnum
    having?: docs_modeloScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Docs_modeloCountAggregateInputType | true
    _avg?: Docs_modeloAvgAggregateInputType
    _sum?: Docs_modeloSumAggregateInputType
    _min?: Docs_modeloMinAggregateInputType
    _max?: Docs_modeloMaxAggregateInputType
  }

  export type Docs_modeloGroupByOutputType = {
    id_docs_modelo: number
    boleto_pagto_escritura: string
    boleto_pagto_escritura_itbi: string
    boleto_pagto_escritura_registro: string
    promessa_compra_venda_assinado: string
    promessa_compra_venda_modelo: string
    promessa_compra_venda_preenchido: string
    quadro_resumo_modelo: string
    requerimento_cartorio_modelo: string
    requerimento_cartorio_preenchido: string
    createdAt: Date
    updatedAt: Date
    _count: Docs_modeloCountAggregateOutputType | null
    _avg: Docs_modeloAvgAggregateOutputType | null
    _sum: Docs_modeloSumAggregateOutputType | null
    _min: Docs_modeloMinAggregateOutputType | null
    _max: Docs_modeloMaxAggregateOutputType | null
  }

  type GetDocs_modeloGroupByPayload<T extends docs_modeloGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Docs_modeloGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Docs_modeloGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Docs_modeloGroupByOutputType[P]>
            : GetScalarType<T[P], Docs_modeloGroupByOutputType[P]>
        }
      >
    >


  export type docs_modeloSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_docs_modelo?: boolean
    boleto_pagto_escritura?: boolean
    boleto_pagto_escritura_itbi?: boolean
    boleto_pagto_escritura_registro?: boolean
    promessa_compra_venda_assinado?: boolean
    promessa_compra_venda_modelo?: boolean
    promessa_compra_venda_preenchido?: boolean
    quadro_resumo_modelo?: boolean
    requerimento_cartorio_modelo?: boolean
    requerimento_cartorio_preenchido?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["docs_modelo"]>


  export type docs_modeloSelectScalar = {
    id_docs_modelo?: boolean
    boleto_pagto_escritura?: boolean
    boleto_pagto_escritura_itbi?: boolean
    boleto_pagto_escritura_registro?: boolean
    promessa_compra_venda_assinado?: boolean
    promessa_compra_venda_modelo?: boolean
    promessa_compra_venda_preenchido?: boolean
    quadro_resumo_modelo?: boolean
    requerimento_cartorio_modelo?: boolean
    requerimento_cartorio_preenchido?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $docs_modeloPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "docs_modelo"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_docs_modelo: number
      boleto_pagto_escritura: string
      boleto_pagto_escritura_itbi: string
      boleto_pagto_escritura_registro: string
      promessa_compra_venda_assinado: string
      promessa_compra_venda_modelo: string
      promessa_compra_venda_preenchido: string
      quadro_resumo_modelo: string
      requerimento_cartorio_modelo: string
      requerimento_cartorio_preenchido: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["docs_modelo"]>
    composites: {}
  }

  type docs_modeloGetPayload<S extends boolean | null | undefined | docs_modeloDefaultArgs> = $Result.GetResult<Prisma.$docs_modeloPayload, S>

  type docs_modeloCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<docs_modeloFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Docs_modeloCountAggregateInputType | true
    }

  export interface docs_modeloDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['docs_modelo'], meta: { name: 'docs_modelo' } }
    /**
     * Find zero or one Docs_modelo that matches the filter.
     * @param {docs_modeloFindUniqueArgs} args - Arguments to find a Docs_modelo
     * @example
     * // Get one Docs_modelo
     * const docs_modelo = await prisma.docs_modelo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends docs_modeloFindUniqueArgs>(args: SelectSubset<T, docs_modeloFindUniqueArgs<ExtArgs>>): Prisma__docs_modeloClient<$Result.GetResult<Prisma.$docs_modeloPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Docs_modelo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {docs_modeloFindUniqueOrThrowArgs} args - Arguments to find a Docs_modelo
     * @example
     * // Get one Docs_modelo
     * const docs_modelo = await prisma.docs_modelo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends docs_modeloFindUniqueOrThrowArgs>(args: SelectSubset<T, docs_modeloFindUniqueOrThrowArgs<ExtArgs>>): Prisma__docs_modeloClient<$Result.GetResult<Prisma.$docs_modeloPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Docs_modelo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {docs_modeloFindFirstArgs} args - Arguments to find a Docs_modelo
     * @example
     * // Get one Docs_modelo
     * const docs_modelo = await prisma.docs_modelo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends docs_modeloFindFirstArgs>(args?: SelectSubset<T, docs_modeloFindFirstArgs<ExtArgs>>): Prisma__docs_modeloClient<$Result.GetResult<Prisma.$docs_modeloPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Docs_modelo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {docs_modeloFindFirstOrThrowArgs} args - Arguments to find a Docs_modelo
     * @example
     * // Get one Docs_modelo
     * const docs_modelo = await prisma.docs_modelo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends docs_modeloFindFirstOrThrowArgs>(args?: SelectSubset<T, docs_modeloFindFirstOrThrowArgs<ExtArgs>>): Prisma__docs_modeloClient<$Result.GetResult<Prisma.$docs_modeloPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Docs_modelos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {docs_modeloFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Docs_modelos
     * const docs_modelos = await prisma.docs_modelo.findMany()
     * 
     * // Get first 10 Docs_modelos
     * const docs_modelos = await prisma.docs_modelo.findMany({ take: 10 })
     * 
     * // Only select the `id_docs_modelo`
     * const docs_modeloWithId_docs_modeloOnly = await prisma.docs_modelo.findMany({ select: { id_docs_modelo: true } })
     * 
     */
    findMany<T extends docs_modeloFindManyArgs>(args?: SelectSubset<T, docs_modeloFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$docs_modeloPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Docs_modelo.
     * @param {docs_modeloCreateArgs} args - Arguments to create a Docs_modelo.
     * @example
     * // Create one Docs_modelo
     * const Docs_modelo = await prisma.docs_modelo.create({
     *   data: {
     *     // ... data to create a Docs_modelo
     *   }
     * })
     * 
     */
    create<T extends docs_modeloCreateArgs>(args: SelectSubset<T, docs_modeloCreateArgs<ExtArgs>>): Prisma__docs_modeloClient<$Result.GetResult<Prisma.$docs_modeloPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Docs_modelos.
     * @param {docs_modeloCreateManyArgs} args - Arguments to create many Docs_modelos.
     * @example
     * // Create many Docs_modelos
     * const docs_modelo = await prisma.docs_modelo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends docs_modeloCreateManyArgs>(args?: SelectSubset<T, docs_modeloCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Docs_modelo.
     * @param {docs_modeloDeleteArgs} args - Arguments to delete one Docs_modelo.
     * @example
     * // Delete one Docs_modelo
     * const Docs_modelo = await prisma.docs_modelo.delete({
     *   where: {
     *     // ... filter to delete one Docs_modelo
     *   }
     * })
     * 
     */
    delete<T extends docs_modeloDeleteArgs>(args: SelectSubset<T, docs_modeloDeleteArgs<ExtArgs>>): Prisma__docs_modeloClient<$Result.GetResult<Prisma.$docs_modeloPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Docs_modelo.
     * @param {docs_modeloUpdateArgs} args - Arguments to update one Docs_modelo.
     * @example
     * // Update one Docs_modelo
     * const docs_modelo = await prisma.docs_modelo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends docs_modeloUpdateArgs>(args: SelectSubset<T, docs_modeloUpdateArgs<ExtArgs>>): Prisma__docs_modeloClient<$Result.GetResult<Prisma.$docs_modeloPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Docs_modelos.
     * @param {docs_modeloDeleteManyArgs} args - Arguments to filter Docs_modelos to delete.
     * @example
     * // Delete a few Docs_modelos
     * const { count } = await prisma.docs_modelo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends docs_modeloDeleteManyArgs>(args?: SelectSubset<T, docs_modeloDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Docs_modelos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {docs_modeloUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Docs_modelos
     * const docs_modelo = await prisma.docs_modelo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends docs_modeloUpdateManyArgs>(args: SelectSubset<T, docs_modeloUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Docs_modelo.
     * @param {docs_modeloUpsertArgs} args - Arguments to update or create a Docs_modelo.
     * @example
     * // Update or create a Docs_modelo
     * const docs_modelo = await prisma.docs_modelo.upsert({
     *   create: {
     *     // ... data to create a Docs_modelo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Docs_modelo we want to update
     *   }
     * })
     */
    upsert<T extends docs_modeloUpsertArgs>(args: SelectSubset<T, docs_modeloUpsertArgs<ExtArgs>>): Prisma__docs_modeloClient<$Result.GetResult<Prisma.$docs_modeloPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Docs_modelos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {docs_modeloCountArgs} args - Arguments to filter Docs_modelos to count.
     * @example
     * // Count the number of Docs_modelos
     * const count = await prisma.docs_modelo.count({
     *   where: {
     *     // ... the filter for the Docs_modelos we want to count
     *   }
     * })
    **/
    count<T extends docs_modeloCountArgs>(
      args?: Subset<T, docs_modeloCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Docs_modeloCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Docs_modelo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Docs_modeloAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Docs_modeloAggregateArgs>(args: Subset<T, Docs_modeloAggregateArgs>): Prisma.PrismaPromise<GetDocs_modeloAggregateType<T>>

    /**
     * Group by Docs_modelo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {docs_modeloGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends docs_modeloGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: docs_modeloGroupByArgs['orderBy'] }
        : { orderBy?: docs_modeloGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, docs_modeloGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocs_modeloGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the docs_modelo model
   */
  readonly fields: docs_modeloFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for docs_modelo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__docs_modeloClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the docs_modelo model
   */ 
  interface docs_modeloFieldRefs {
    readonly id_docs_modelo: FieldRef<"docs_modelo", 'Int'>
    readonly boleto_pagto_escritura: FieldRef<"docs_modelo", 'String'>
    readonly boleto_pagto_escritura_itbi: FieldRef<"docs_modelo", 'String'>
    readonly boleto_pagto_escritura_registro: FieldRef<"docs_modelo", 'String'>
    readonly promessa_compra_venda_assinado: FieldRef<"docs_modelo", 'String'>
    readonly promessa_compra_venda_modelo: FieldRef<"docs_modelo", 'String'>
    readonly promessa_compra_venda_preenchido: FieldRef<"docs_modelo", 'String'>
    readonly quadro_resumo_modelo: FieldRef<"docs_modelo", 'String'>
    readonly requerimento_cartorio_modelo: FieldRef<"docs_modelo", 'String'>
    readonly requerimento_cartorio_preenchido: FieldRef<"docs_modelo", 'String'>
    readonly createdAt: FieldRef<"docs_modelo", 'DateTime'>
    readonly updatedAt: FieldRef<"docs_modelo", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * docs_modelo findUnique
   */
  export type docs_modeloFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the docs_modelo
     */
    select?: docs_modeloSelect<ExtArgs> | null
    /**
     * Filter, which docs_modelo to fetch.
     */
    where: docs_modeloWhereUniqueInput
  }

  /**
   * docs_modelo findUniqueOrThrow
   */
  export type docs_modeloFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the docs_modelo
     */
    select?: docs_modeloSelect<ExtArgs> | null
    /**
     * Filter, which docs_modelo to fetch.
     */
    where: docs_modeloWhereUniqueInput
  }

  /**
   * docs_modelo findFirst
   */
  export type docs_modeloFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the docs_modelo
     */
    select?: docs_modeloSelect<ExtArgs> | null
    /**
     * Filter, which docs_modelo to fetch.
     */
    where?: docs_modeloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of docs_modelos to fetch.
     */
    orderBy?: docs_modeloOrderByWithRelationInput | docs_modeloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for docs_modelos.
     */
    cursor?: docs_modeloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` docs_modelos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` docs_modelos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of docs_modelos.
     */
    distinct?: Docs_modeloScalarFieldEnum | Docs_modeloScalarFieldEnum[]
  }

  /**
   * docs_modelo findFirstOrThrow
   */
  export type docs_modeloFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the docs_modelo
     */
    select?: docs_modeloSelect<ExtArgs> | null
    /**
     * Filter, which docs_modelo to fetch.
     */
    where?: docs_modeloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of docs_modelos to fetch.
     */
    orderBy?: docs_modeloOrderByWithRelationInput | docs_modeloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for docs_modelos.
     */
    cursor?: docs_modeloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` docs_modelos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` docs_modelos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of docs_modelos.
     */
    distinct?: Docs_modeloScalarFieldEnum | Docs_modeloScalarFieldEnum[]
  }

  /**
   * docs_modelo findMany
   */
  export type docs_modeloFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the docs_modelo
     */
    select?: docs_modeloSelect<ExtArgs> | null
    /**
     * Filter, which docs_modelos to fetch.
     */
    where?: docs_modeloWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of docs_modelos to fetch.
     */
    orderBy?: docs_modeloOrderByWithRelationInput | docs_modeloOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing docs_modelos.
     */
    cursor?: docs_modeloWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` docs_modelos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` docs_modelos.
     */
    skip?: number
    distinct?: Docs_modeloScalarFieldEnum | Docs_modeloScalarFieldEnum[]
  }

  /**
   * docs_modelo create
   */
  export type docs_modeloCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the docs_modelo
     */
    select?: docs_modeloSelect<ExtArgs> | null
    /**
     * The data needed to create a docs_modelo.
     */
    data: XOR<docs_modeloCreateInput, docs_modeloUncheckedCreateInput>
  }

  /**
   * docs_modelo createMany
   */
  export type docs_modeloCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many docs_modelos.
     */
    data: docs_modeloCreateManyInput | docs_modeloCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * docs_modelo update
   */
  export type docs_modeloUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the docs_modelo
     */
    select?: docs_modeloSelect<ExtArgs> | null
    /**
     * The data needed to update a docs_modelo.
     */
    data: XOR<docs_modeloUpdateInput, docs_modeloUncheckedUpdateInput>
    /**
     * Choose, which docs_modelo to update.
     */
    where: docs_modeloWhereUniqueInput
  }

  /**
   * docs_modelo updateMany
   */
  export type docs_modeloUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update docs_modelos.
     */
    data: XOR<docs_modeloUpdateManyMutationInput, docs_modeloUncheckedUpdateManyInput>
    /**
     * Filter which docs_modelos to update
     */
    where?: docs_modeloWhereInput
  }

  /**
   * docs_modelo upsert
   */
  export type docs_modeloUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the docs_modelo
     */
    select?: docs_modeloSelect<ExtArgs> | null
    /**
     * The filter to search for the docs_modelo to update in case it exists.
     */
    where: docs_modeloWhereUniqueInput
    /**
     * In case the docs_modelo found by the `where` argument doesn't exist, create a new docs_modelo with this data.
     */
    create: XOR<docs_modeloCreateInput, docs_modeloUncheckedCreateInput>
    /**
     * In case the docs_modelo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<docs_modeloUpdateInput, docs_modeloUncheckedUpdateInput>
  }

  /**
   * docs_modelo delete
   */
  export type docs_modeloDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the docs_modelo
     */
    select?: docs_modeloSelect<ExtArgs> | null
    /**
     * Filter which docs_modelo to delete.
     */
    where: docs_modeloWhereUniqueInput
  }

  /**
   * docs_modelo deleteMany
   */
  export type docs_modeloDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which docs_modelos to delete
     */
    where?: docs_modeloWhereInput
  }

  /**
   * docs_modelo without action
   */
  export type docs_modeloDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the docs_modelo
     */
    select?: docs_modeloSelect<ExtArgs> | null
  }


  /**
   * Model formas_pagto
   */

  export type AggregateFormas_pagto = {
    _count: Formas_pagtoCountAggregateOutputType | null
    _avg: Formas_pagtoAvgAggregateOutputType | null
    _sum: Formas_pagtoSumAggregateOutputType | null
    _min: Formas_pagtoMinAggregateOutputType | null
    _max: Formas_pagtoMaxAggregateOutputType | null
  }

  export type Formas_pagtoAvgAggregateOutputType = {
    id_formas_pagto: number | null
    valor_sinal_entrada: Decimal | null
    qtd_parc_sinal_entrada: number | null
    saldo_restante: Decimal | null
    qtd_parc_saldo_restante: number | null
    valor_parc_saldo_rest: Decimal | null
  }

  export type Formas_pagtoSumAggregateOutputType = {
    id_formas_pagto: number | null
    valor_sinal_entrada: Decimal | null
    qtd_parc_sinal_entrada: number | null
    saldo_restante: Decimal | null
    qtd_parc_saldo_restante: number | null
    valor_parc_saldo_rest: Decimal | null
  }

  export type Formas_pagtoMinAggregateOutputType = {
    id_formas_pagto: number | null
    valor_sinal_entrada: Decimal | null
    qtd_parc_sinal_entrada: number | null
    data_venc_sinal_entada: string | null
    saldo_restante: Decimal | null
    qtd_parc_saldo_restante: number | null
    valor_parc_saldo_rest: Decimal | null
    data_vencto_parc_saldo_restante: string | null
    forma_pagto_sinal_entrada: string | null
    forma_pagto_saldo_restante: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Formas_pagtoMaxAggregateOutputType = {
    id_formas_pagto: number | null
    valor_sinal_entrada: Decimal | null
    qtd_parc_sinal_entrada: number | null
    data_venc_sinal_entada: string | null
    saldo_restante: Decimal | null
    qtd_parc_saldo_restante: number | null
    valor_parc_saldo_rest: Decimal | null
    data_vencto_parc_saldo_restante: string | null
    forma_pagto_sinal_entrada: string | null
    forma_pagto_saldo_restante: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Formas_pagtoCountAggregateOutputType = {
    id_formas_pagto: number
    valor_sinal_entrada: number
    qtd_parc_sinal_entrada: number
    data_venc_sinal_entada: number
    saldo_restante: number
    qtd_parc_saldo_restante: number
    valor_parc_saldo_rest: number
    data_vencto_parc_saldo_restante: number
    forma_pagto_sinal_entrada: number
    forma_pagto_saldo_restante: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Formas_pagtoAvgAggregateInputType = {
    id_formas_pagto?: true
    valor_sinal_entrada?: true
    qtd_parc_sinal_entrada?: true
    saldo_restante?: true
    qtd_parc_saldo_restante?: true
    valor_parc_saldo_rest?: true
  }

  export type Formas_pagtoSumAggregateInputType = {
    id_formas_pagto?: true
    valor_sinal_entrada?: true
    qtd_parc_sinal_entrada?: true
    saldo_restante?: true
    qtd_parc_saldo_restante?: true
    valor_parc_saldo_rest?: true
  }

  export type Formas_pagtoMinAggregateInputType = {
    id_formas_pagto?: true
    valor_sinal_entrada?: true
    qtd_parc_sinal_entrada?: true
    data_venc_sinal_entada?: true
    saldo_restante?: true
    qtd_parc_saldo_restante?: true
    valor_parc_saldo_rest?: true
    data_vencto_parc_saldo_restante?: true
    forma_pagto_sinal_entrada?: true
    forma_pagto_saldo_restante?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Formas_pagtoMaxAggregateInputType = {
    id_formas_pagto?: true
    valor_sinal_entrada?: true
    qtd_parc_sinal_entrada?: true
    data_venc_sinal_entada?: true
    saldo_restante?: true
    qtd_parc_saldo_restante?: true
    valor_parc_saldo_rest?: true
    data_vencto_parc_saldo_restante?: true
    forma_pagto_sinal_entrada?: true
    forma_pagto_saldo_restante?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Formas_pagtoCountAggregateInputType = {
    id_formas_pagto?: true
    valor_sinal_entrada?: true
    qtd_parc_sinal_entrada?: true
    data_venc_sinal_entada?: true
    saldo_restante?: true
    qtd_parc_saldo_restante?: true
    valor_parc_saldo_rest?: true
    data_vencto_parc_saldo_restante?: true
    forma_pagto_sinal_entrada?: true
    forma_pagto_saldo_restante?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Formas_pagtoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which formas_pagto to aggregate.
     */
    where?: formas_pagtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of formas_pagtos to fetch.
     */
    orderBy?: formas_pagtoOrderByWithRelationInput | formas_pagtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: formas_pagtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` formas_pagtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` formas_pagtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned formas_pagtos
    **/
    _count?: true | Formas_pagtoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Formas_pagtoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Formas_pagtoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Formas_pagtoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Formas_pagtoMaxAggregateInputType
  }

  export type GetFormas_pagtoAggregateType<T extends Formas_pagtoAggregateArgs> = {
        [P in keyof T & keyof AggregateFormas_pagto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFormas_pagto[P]>
      : GetScalarType<T[P], AggregateFormas_pagto[P]>
  }




  export type formas_pagtoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: formas_pagtoWhereInput
    orderBy?: formas_pagtoOrderByWithAggregationInput | formas_pagtoOrderByWithAggregationInput[]
    by: Formas_pagtoScalarFieldEnum[] | Formas_pagtoScalarFieldEnum
    having?: formas_pagtoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Formas_pagtoCountAggregateInputType | true
    _avg?: Formas_pagtoAvgAggregateInputType
    _sum?: Formas_pagtoSumAggregateInputType
    _min?: Formas_pagtoMinAggregateInputType
    _max?: Formas_pagtoMaxAggregateInputType
  }

  export type Formas_pagtoGroupByOutputType = {
    id_formas_pagto: number
    valor_sinal_entrada: Decimal
    qtd_parc_sinal_entrada: number
    data_venc_sinal_entada: string
    saldo_restante: Decimal
    qtd_parc_saldo_restante: number
    valor_parc_saldo_rest: Decimal
    data_vencto_parc_saldo_restante: string
    forma_pagto_sinal_entrada: string
    forma_pagto_saldo_restante: string
    createdAt: Date
    updatedAt: Date
    _count: Formas_pagtoCountAggregateOutputType | null
    _avg: Formas_pagtoAvgAggregateOutputType | null
    _sum: Formas_pagtoSumAggregateOutputType | null
    _min: Formas_pagtoMinAggregateOutputType | null
    _max: Formas_pagtoMaxAggregateOutputType | null
  }

  type GetFormas_pagtoGroupByPayload<T extends formas_pagtoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Formas_pagtoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Formas_pagtoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Formas_pagtoGroupByOutputType[P]>
            : GetScalarType<T[P], Formas_pagtoGroupByOutputType[P]>
        }
      >
    >


  export type formas_pagtoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_formas_pagto?: boolean
    valor_sinal_entrada?: boolean
    qtd_parc_sinal_entrada?: boolean
    data_venc_sinal_entada?: boolean
    saldo_restante?: boolean
    qtd_parc_saldo_restante?: boolean
    valor_parc_saldo_rest?: boolean
    data_vencto_parc_saldo_restante?: boolean
    forma_pagto_sinal_entrada?: boolean
    forma_pagto_saldo_restante?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["formas_pagto"]>


  export type formas_pagtoSelectScalar = {
    id_formas_pagto?: boolean
    valor_sinal_entrada?: boolean
    qtd_parc_sinal_entrada?: boolean
    data_venc_sinal_entada?: boolean
    saldo_restante?: boolean
    qtd_parc_saldo_restante?: boolean
    valor_parc_saldo_rest?: boolean
    data_vencto_parc_saldo_restante?: boolean
    forma_pagto_sinal_entrada?: boolean
    forma_pagto_saldo_restante?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $formas_pagtoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "formas_pagto"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_formas_pagto: number
      valor_sinal_entrada: Prisma.Decimal
      qtd_parc_sinal_entrada: number
      data_venc_sinal_entada: string
      saldo_restante: Prisma.Decimal
      qtd_parc_saldo_restante: number
      valor_parc_saldo_rest: Prisma.Decimal
      data_vencto_parc_saldo_restante: string
      forma_pagto_sinal_entrada: string
      forma_pagto_saldo_restante: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["formas_pagto"]>
    composites: {}
  }

  type formas_pagtoGetPayload<S extends boolean | null | undefined | formas_pagtoDefaultArgs> = $Result.GetResult<Prisma.$formas_pagtoPayload, S>

  type formas_pagtoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<formas_pagtoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Formas_pagtoCountAggregateInputType | true
    }

  export interface formas_pagtoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['formas_pagto'], meta: { name: 'formas_pagto' } }
    /**
     * Find zero or one Formas_pagto that matches the filter.
     * @param {formas_pagtoFindUniqueArgs} args - Arguments to find a Formas_pagto
     * @example
     * // Get one Formas_pagto
     * const formas_pagto = await prisma.formas_pagto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends formas_pagtoFindUniqueArgs>(args: SelectSubset<T, formas_pagtoFindUniqueArgs<ExtArgs>>): Prisma__formas_pagtoClient<$Result.GetResult<Prisma.$formas_pagtoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Formas_pagto that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {formas_pagtoFindUniqueOrThrowArgs} args - Arguments to find a Formas_pagto
     * @example
     * // Get one Formas_pagto
     * const formas_pagto = await prisma.formas_pagto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends formas_pagtoFindUniqueOrThrowArgs>(args: SelectSubset<T, formas_pagtoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__formas_pagtoClient<$Result.GetResult<Prisma.$formas_pagtoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Formas_pagto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {formas_pagtoFindFirstArgs} args - Arguments to find a Formas_pagto
     * @example
     * // Get one Formas_pagto
     * const formas_pagto = await prisma.formas_pagto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends formas_pagtoFindFirstArgs>(args?: SelectSubset<T, formas_pagtoFindFirstArgs<ExtArgs>>): Prisma__formas_pagtoClient<$Result.GetResult<Prisma.$formas_pagtoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Formas_pagto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {formas_pagtoFindFirstOrThrowArgs} args - Arguments to find a Formas_pagto
     * @example
     * // Get one Formas_pagto
     * const formas_pagto = await prisma.formas_pagto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends formas_pagtoFindFirstOrThrowArgs>(args?: SelectSubset<T, formas_pagtoFindFirstOrThrowArgs<ExtArgs>>): Prisma__formas_pagtoClient<$Result.GetResult<Prisma.$formas_pagtoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Formas_pagtos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {formas_pagtoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Formas_pagtos
     * const formas_pagtos = await prisma.formas_pagto.findMany()
     * 
     * // Get first 10 Formas_pagtos
     * const formas_pagtos = await prisma.formas_pagto.findMany({ take: 10 })
     * 
     * // Only select the `id_formas_pagto`
     * const formas_pagtoWithId_formas_pagtoOnly = await prisma.formas_pagto.findMany({ select: { id_formas_pagto: true } })
     * 
     */
    findMany<T extends formas_pagtoFindManyArgs>(args?: SelectSubset<T, formas_pagtoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$formas_pagtoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Formas_pagto.
     * @param {formas_pagtoCreateArgs} args - Arguments to create a Formas_pagto.
     * @example
     * // Create one Formas_pagto
     * const Formas_pagto = await prisma.formas_pagto.create({
     *   data: {
     *     // ... data to create a Formas_pagto
     *   }
     * })
     * 
     */
    create<T extends formas_pagtoCreateArgs>(args: SelectSubset<T, formas_pagtoCreateArgs<ExtArgs>>): Prisma__formas_pagtoClient<$Result.GetResult<Prisma.$formas_pagtoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Formas_pagtos.
     * @param {formas_pagtoCreateManyArgs} args - Arguments to create many Formas_pagtos.
     * @example
     * // Create many Formas_pagtos
     * const formas_pagto = await prisma.formas_pagto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends formas_pagtoCreateManyArgs>(args?: SelectSubset<T, formas_pagtoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Formas_pagto.
     * @param {formas_pagtoDeleteArgs} args - Arguments to delete one Formas_pagto.
     * @example
     * // Delete one Formas_pagto
     * const Formas_pagto = await prisma.formas_pagto.delete({
     *   where: {
     *     // ... filter to delete one Formas_pagto
     *   }
     * })
     * 
     */
    delete<T extends formas_pagtoDeleteArgs>(args: SelectSubset<T, formas_pagtoDeleteArgs<ExtArgs>>): Prisma__formas_pagtoClient<$Result.GetResult<Prisma.$formas_pagtoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Formas_pagto.
     * @param {formas_pagtoUpdateArgs} args - Arguments to update one Formas_pagto.
     * @example
     * // Update one Formas_pagto
     * const formas_pagto = await prisma.formas_pagto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends formas_pagtoUpdateArgs>(args: SelectSubset<T, formas_pagtoUpdateArgs<ExtArgs>>): Prisma__formas_pagtoClient<$Result.GetResult<Prisma.$formas_pagtoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Formas_pagtos.
     * @param {formas_pagtoDeleteManyArgs} args - Arguments to filter Formas_pagtos to delete.
     * @example
     * // Delete a few Formas_pagtos
     * const { count } = await prisma.formas_pagto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends formas_pagtoDeleteManyArgs>(args?: SelectSubset<T, formas_pagtoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Formas_pagtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {formas_pagtoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Formas_pagtos
     * const formas_pagto = await prisma.formas_pagto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends formas_pagtoUpdateManyArgs>(args: SelectSubset<T, formas_pagtoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Formas_pagto.
     * @param {formas_pagtoUpsertArgs} args - Arguments to update or create a Formas_pagto.
     * @example
     * // Update or create a Formas_pagto
     * const formas_pagto = await prisma.formas_pagto.upsert({
     *   create: {
     *     // ... data to create a Formas_pagto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Formas_pagto we want to update
     *   }
     * })
     */
    upsert<T extends formas_pagtoUpsertArgs>(args: SelectSubset<T, formas_pagtoUpsertArgs<ExtArgs>>): Prisma__formas_pagtoClient<$Result.GetResult<Prisma.$formas_pagtoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Formas_pagtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {formas_pagtoCountArgs} args - Arguments to filter Formas_pagtos to count.
     * @example
     * // Count the number of Formas_pagtos
     * const count = await prisma.formas_pagto.count({
     *   where: {
     *     // ... the filter for the Formas_pagtos we want to count
     *   }
     * })
    **/
    count<T extends formas_pagtoCountArgs>(
      args?: Subset<T, formas_pagtoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Formas_pagtoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Formas_pagto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Formas_pagtoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Formas_pagtoAggregateArgs>(args: Subset<T, Formas_pagtoAggregateArgs>): Prisma.PrismaPromise<GetFormas_pagtoAggregateType<T>>

    /**
     * Group by Formas_pagto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {formas_pagtoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends formas_pagtoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: formas_pagtoGroupByArgs['orderBy'] }
        : { orderBy?: formas_pagtoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, formas_pagtoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFormas_pagtoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the formas_pagto model
   */
  readonly fields: formas_pagtoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for formas_pagto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__formas_pagtoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the formas_pagto model
   */ 
  interface formas_pagtoFieldRefs {
    readonly id_formas_pagto: FieldRef<"formas_pagto", 'Int'>
    readonly valor_sinal_entrada: FieldRef<"formas_pagto", 'Decimal'>
    readonly qtd_parc_sinal_entrada: FieldRef<"formas_pagto", 'Int'>
    readonly data_venc_sinal_entada: FieldRef<"formas_pagto", 'String'>
    readonly saldo_restante: FieldRef<"formas_pagto", 'Decimal'>
    readonly qtd_parc_saldo_restante: FieldRef<"formas_pagto", 'Int'>
    readonly valor_parc_saldo_rest: FieldRef<"formas_pagto", 'Decimal'>
    readonly data_vencto_parc_saldo_restante: FieldRef<"formas_pagto", 'String'>
    readonly forma_pagto_sinal_entrada: FieldRef<"formas_pagto", 'String'>
    readonly forma_pagto_saldo_restante: FieldRef<"formas_pagto", 'String'>
    readonly createdAt: FieldRef<"formas_pagto", 'DateTime'>
    readonly updatedAt: FieldRef<"formas_pagto", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * formas_pagto findUnique
   */
  export type formas_pagtoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the formas_pagto
     */
    select?: formas_pagtoSelect<ExtArgs> | null
    /**
     * Filter, which formas_pagto to fetch.
     */
    where: formas_pagtoWhereUniqueInput
  }

  /**
   * formas_pagto findUniqueOrThrow
   */
  export type formas_pagtoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the formas_pagto
     */
    select?: formas_pagtoSelect<ExtArgs> | null
    /**
     * Filter, which formas_pagto to fetch.
     */
    where: formas_pagtoWhereUniqueInput
  }

  /**
   * formas_pagto findFirst
   */
  export type formas_pagtoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the formas_pagto
     */
    select?: formas_pagtoSelect<ExtArgs> | null
    /**
     * Filter, which formas_pagto to fetch.
     */
    where?: formas_pagtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of formas_pagtos to fetch.
     */
    orderBy?: formas_pagtoOrderByWithRelationInput | formas_pagtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for formas_pagtos.
     */
    cursor?: formas_pagtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` formas_pagtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` formas_pagtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of formas_pagtos.
     */
    distinct?: Formas_pagtoScalarFieldEnum | Formas_pagtoScalarFieldEnum[]
  }

  /**
   * formas_pagto findFirstOrThrow
   */
  export type formas_pagtoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the formas_pagto
     */
    select?: formas_pagtoSelect<ExtArgs> | null
    /**
     * Filter, which formas_pagto to fetch.
     */
    where?: formas_pagtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of formas_pagtos to fetch.
     */
    orderBy?: formas_pagtoOrderByWithRelationInput | formas_pagtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for formas_pagtos.
     */
    cursor?: formas_pagtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` formas_pagtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` formas_pagtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of formas_pagtos.
     */
    distinct?: Formas_pagtoScalarFieldEnum | Formas_pagtoScalarFieldEnum[]
  }

  /**
   * formas_pagto findMany
   */
  export type formas_pagtoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the formas_pagto
     */
    select?: formas_pagtoSelect<ExtArgs> | null
    /**
     * Filter, which formas_pagtos to fetch.
     */
    where?: formas_pagtoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of formas_pagtos to fetch.
     */
    orderBy?: formas_pagtoOrderByWithRelationInput | formas_pagtoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing formas_pagtos.
     */
    cursor?: formas_pagtoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` formas_pagtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` formas_pagtos.
     */
    skip?: number
    distinct?: Formas_pagtoScalarFieldEnum | Formas_pagtoScalarFieldEnum[]
  }

  /**
   * formas_pagto create
   */
  export type formas_pagtoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the formas_pagto
     */
    select?: formas_pagtoSelect<ExtArgs> | null
    /**
     * The data needed to create a formas_pagto.
     */
    data: XOR<formas_pagtoCreateInput, formas_pagtoUncheckedCreateInput>
  }

  /**
   * formas_pagto createMany
   */
  export type formas_pagtoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many formas_pagtos.
     */
    data: formas_pagtoCreateManyInput | formas_pagtoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * formas_pagto update
   */
  export type formas_pagtoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the formas_pagto
     */
    select?: formas_pagtoSelect<ExtArgs> | null
    /**
     * The data needed to update a formas_pagto.
     */
    data: XOR<formas_pagtoUpdateInput, formas_pagtoUncheckedUpdateInput>
    /**
     * Choose, which formas_pagto to update.
     */
    where: formas_pagtoWhereUniqueInput
  }

  /**
   * formas_pagto updateMany
   */
  export type formas_pagtoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update formas_pagtos.
     */
    data: XOR<formas_pagtoUpdateManyMutationInput, formas_pagtoUncheckedUpdateManyInput>
    /**
     * Filter which formas_pagtos to update
     */
    where?: formas_pagtoWhereInput
  }

  /**
   * formas_pagto upsert
   */
  export type formas_pagtoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the formas_pagto
     */
    select?: formas_pagtoSelect<ExtArgs> | null
    /**
     * The filter to search for the formas_pagto to update in case it exists.
     */
    where: formas_pagtoWhereUniqueInput
    /**
     * In case the formas_pagto found by the `where` argument doesn't exist, create a new formas_pagto with this data.
     */
    create: XOR<formas_pagtoCreateInput, formas_pagtoUncheckedCreateInput>
    /**
     * In case the formas_pagto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<formas_pagtoUpdateInput, formas_pagtoUncheckedUpdateInput>
  }

  /**
   * formas_pagto delete
   */
  export type formas_pagtoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the formas_pagto
     */
    select?: formas_pagtoSelect<ExtArgs> | null
    /**
     * Filter which formas_pagto to delete.
     */
    where: formas_pagtoWhereUniqueInput
  }

  /**
   * formas_pagto deleteMany
   */
  export type formas_pagtoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which formas_pagtos to delete
     */
    where?: formas_pagtoWhereInput
  }

  /**
   * formas_pagto without action
   */
  export type formas_pagtoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the formas_pagto
     */
    select?: formas_pagtoSelect<ExtArgs> | null
  }


  /**
   * Model documentos
   */

  export type AggregateDocumentos = {
    _count: DocumentosCountAggregateOutputType | null
    _avg: DocumentosAvgAggregateOutputType | null
    _sum: DocumentosSumAggregateOutputType | null
    _min: DocumentosMinAggregateOutputType | null
    _max: DocumentosMaxAggregateOutputType | null
  }

  export type DocumentosAvgAggregateOutputType = {
    id_documentos: number | null
  }

  export type DocumentosSumAggregateOutputType = {
    id_documentos: number | null
  }

  export type DocumentosMinAggregateOutputType = {
    id_documentos: number | null
    certidao_casamento: string | null
    certidao_nascimento: string | null
    comprovante_renda: string | null
    conjunto_plt_imovel: string | null
    escritura_assinada: string | null
    laudo_itbi: string | null
    manual_usuario: string | null
    quadro_resumo: string | null
    registro_imoveis_assinado: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DocumentosMaxAggregateOutputType = {
    id_documentos: number | null
    certidao_casamento: string | null
    certidao_nascimento: string | null
    comprovante_renda: string | null
    conjunto_plt_imovel: string | null
    escritura_assinada: string | null
    laudo_itbi: string | null
    manual_usuario: string | null
    quadro_resumo: string | null
    registro_imoveis_assinado: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DocumentosCountAggregateOutputType = {
    id_documentos: number
    certidao_casamento: number
    certidao_nascimento: number
    comprovante_renda: number
    conjunto_plt_imovel: number
    escritura_assinada: number
    laudo_itbi: number
    manual_usuario: number
    quadro_resumo: number
    registro_imoveis_assinado: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type DocumentosAvgAggregateInputType = {
    id_documentos?: true
  }

  export type DocumentosSumAggregateInputType = {
    id_documentos?: true
  }

  export type DocumentosMinAggregateInputType = {
    id_documentos?: true
    certidao_casamento?: true
    certidao_nascimento?: true
    comprovante_renda?: true
    conjunto_plt_imovel?: true
    escritura_assinada?: true
    laudo_itbi?: true
    manual_usuario?: true
    quadro_resumo?: true
    registro_imoveis_assinado?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DocumentosMaxAggregateInputType = {
    id_documentos?: true
    certidao_casamento?: true
    certidao_nascimento?: true
    comprovante_renda?: true
    conjunto_plt_imovel?: true
    escritura_assinada?: true
    laudo_itbi?: true
    manual_usuario?: true
    quadro_resumo?: true
    registro_imoveis_assinado?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DocumentosCountAggregateInputType = {
    id_documentos?: true
    certidao_casamento?: true
    certidao_nascimento?: true
    comprovante_renda?: true
    conjunto_plt_imovel?: true
    escritura_assinada?: true
    laudo_itbi?: true
    manual_usuario?: true
    quadro_resumo?: true
    registro_imoveis_assinado?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type DocumentosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which documentos to aggregate.
     */
    where?: documentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documentos to fetch.
     */
    orderBy?: documentosOrderByWithRelationInput | documentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: documentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned documentos
    **/
    _count?: true | DocumentosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DocumentosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DocumentosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocumentosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocumentosMaxAggregateInputType
  }

  export type GetDocumentosAggregateType<T extends DocumentosAggregateArgs> = {
        [P in keyof T & keyof AggregateDocumentos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocumentos[P]>
      : GetScalarType<T[P], AggregateDocumentos[P]>
  }




  export type documentosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: documentosWhereInput
    orderBy?: documentosOrderByWithAggregationInput | documentosOrderByWithAggregationInput[]
    by: DocumentosScalarFieldEnum[] | DocumentosScalarFieldEnum
    having?: documentosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocumentosCountAggregateInputType | true
    _avg?: DocumentosAvgAggregateInputType
    _sum?: DocumentosSumAggregateInputType
    _min?: DocumentosMinAggregateInputType
    _max?: DocumentosMaxAggregateInputType
  }

  export type DocumentosGroupByOutputType = {
    id_documentos: number
    certidao_casamento: string | null
    certidao_nascimento: string | null
    comprovante_renda: string
    conjunto_plt_imovel: string
    escritura_assinada: string
    laudo_itbi: string
    manual_usuario: string | null
    quadro_resumo: string | null
    registro_imoveis_assinado: string
    createdAt: Date
    updatedAt: Date
    _count: DocumentosCountAggregateOutputType | null
    _avg: DocumentosAvgAggregateOutputType | null
    _sum: DocumentosSumAggregateOutputType | null
    _min: DocumentosMinAggregateOutputType | null
    _max: DocumentosMaxAggregateOutputType | null
  }

  type GetDocumentosGroupByPayload<T extends documentosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocumentosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocumentosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocumentosGroupByOutputType[P]>
            : GetScalarType<T[P], DocumentosGroupByOutputType[P]>
        }
      >
    >


  export type documentosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_documentos?: boolean
    certidao_casamento?: boolean
    certidao_nascimento?: boolean
    comprovante_renda?: boolean
    conjunto_plt_imovel?: boolean
    escritura_assinada?: boolean
    laudo_itbi?: boolean
    manual_usuario?: boolean
    quadro_resumo?: boolean
    registro_imoveis_assinado?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["documentos"]>


  export type documentosSelectScalar = {
    id_documentos?: boolean
    certidao_casamento?: boolean
    certidao_nascimento?: boolean
    comprovante_renda?: boolean
    conjunto_plt_imovel?: boolean
    escritura_assinada?: boolean
    laudo_itbi?: boolean
    manual_usuario?: boolean
    quadro_resumo?: boolean
    registro_imoveis_assinado?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $documentosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "documentos"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_documentos: number
      certidao_casamento: string | null
      certidao_nascimento: string | null
      comprovante_renda: string
      conjunto_plt_imovel: string
      escritura_assinada: string
      laudo_itbi: string
      manual_usuario: string | null
      quadro_resumo: string | null
      registro_imoveis_assinado: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["documentos"]>
    composites: {}
  }

  type documentosGetPayload<S extends boolean | null | undefined | documentosDefaultArgs> = $Result.GetResult<Prisma.$documentosPayload, S>

  type documentosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<documentosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DocumentosCountAggregateInputType | true
    }

  export interface documentosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['documentos'], meta: { name: 'documentos' } }
    /**
     * Find zero or one Documentos that matches the filter.
     * @param {documentosFindUniqueArgs} args - Arguments to find a Documentos
     * @example
     * // Get one Documentos
     * const documentos = await prisma.documentos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends documentosFindUniqueArgs>(args: SelectSubset<T, documentosFindUniqueArgs<ExtArgs>>): Prisma__documentosClient<$Result.GetResult<Prisma.$documentosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Documentos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {documentosFindUniqueOrThrowArgs} args - Arguments to find a Documentos
     * @example
     * // Get one Documentos
     * const documentos = await prisma.documentos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends documentosFindUniqueOrThrowArgs>(args: SelectSubset<T, documentosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__documentosClient<$Result.GetResult<Prisma.$documentosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Documentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentosFindFirstArgs} args - Arguments to find a Documentos
     * @example
     * // Get one Documentos
     * const documentos = await prisma.documentos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends documentosFindFirstArgs>(args?: SelectSubset<T, documentosFindFirstArgs<ExtArgs>>): Prisma__documentosClient<$Result.GetResult<Prisma.$documentosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Documentos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentosFindFirstOrThrowArgs} args - Arguments to find a Documentos
     * @example
     * // Get one Documentos
     * const documentos = await prisma.documentos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends documentosFindFirstOrThrowArgs>(args?: SelectSubset<T, documentosFindFirstOrThrowArgs<ExtArgs>>): Prisma__documentosClient<$Result.GetResult<Prisma.$documentosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Documentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Documentos
     * const documentos = await prisma.documentos.findMany()
     * 
     * // Get first 10 Documentos
     * const documentos = await prisma.documentos.findMany({ take: 10 })
     * 
     * // Only select the `id_documentos`
     * const documentosWithId_documentosOnly = await prisma.documentos.findMany({ select: { id_documentos: true } })
     * 
     */
    findMany<T extends documentosFindManyArgs>(args?: SelectSubset<T, documentosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$documentosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Documentos.
     * @param {documentosCreateArgs} args - Arguments to create a Documentos.
     * @example
     * // Create one Documentos
     * const Documentos = await prisma.documentos.create({
     *   data: {
     *     // ... data to create a Documentos
     *   }
     * })
     * 
     */
    create<T extends documentosCreateArgs>(args: SelectSubset<T, documentosCreateArgs<ExtArgs>>): Prisma__documentosClient<$Result.GetResult<Prisma.$documentosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Documentos.
     * @param {documentosCreateManyArgs} args - Arguments to create many Documentos.
     * @example
     * // Create many Documentos
     * const documentos = await prisma.documentos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends documentosCreateManyArgs>(args?: SelectSubset<T, documentosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Documentos.
     * @param {documentosDeleteArgs} args - Arguments to delete one Documentos.
     * @example
     * // Delete one Documentos
     * const Documentos = await prisma.documentos.delete({
     *   where: {
     *     // ... filter to delete one Documentos
     *   }
     * })
     * 
     */
    delete<T extends documentosDeleteArgs>(args: SelectSubset<T, documentosDeleteArgs<ExtArgs>>): Prisma__documentosClient<$Result.GetResult<Prisma.$documentosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Documentos.
     * @param {documentosUpdateArgs} args - Arguments to update one Documentos.
     * @example
     * // Update one Documentos
     * const documentos = await prisma.documentos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends documentosUpdateArgs>(args: SelectSubset<T, documentosUpdateArgs<ExtArgs>>): Prisma__documentosClient<$Result.GetResult<Prisma.$documentosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Documentos.
     * @param {documentosDeleteManyArgs} args - Arguments to filter Documentos to delete.
     * @example
     * // Delete a few Documentos
     * const { count } = await prisma.documentos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends documentosDeleteManyArgs>(args?: SelectSubset<T, documentosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Documentos
     * const documentos = await prisma.documentos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends documentosUpdateManyArgs>(args: SelectSubset<T, documentosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Documentos.
     * @param {documentosUpsertArgs} args - Arguments to update or create a Documentos.
     * @example
     * // Update or create a Documentos
     * const documentos = await prisma.documentos.upsert({
     *   create: {
     *     // ... data to create a Documentos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Documentos we want to update
     *   }
     * })
     */
    upsert<T extends documentosUpsertArgs>(args: SelectSubset<T, documentosUpsertArgs<ExtArgs>>): Prisma__documentosClient<$Result.GetResult<Prisma.$documentosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Documentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentosCountArgs} args - Arguments to filter Documentos to count.
     * @example
     * // Count the number of Documentos
     * const count = await prisma.documentos.count({
     *   where: {
     *     // ... the filter for the Documentos we want to count
     *   }
     * })
    **/
    count<T extends documentosCountArgs>(
      args?: Subset<T, documentosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocumentosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Documentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocumentosAggregateArgs>(args: Subset<T, DocumentosAggregateArgs>): Prisma.PrismaPromise<GetDocumentosAggregateType<T>>

    /**
     * Group by Documentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {documentosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends documentosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: documentosGroupByArgs['orderBy'] }
        : { orderBy?: documentosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, documentosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocumentosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the documentos model
   */
  readonly fields: documentosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for documentos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__documentosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the documentos model
   */ 
  interface documentosFieldRefs {
    readonly id_documentos: FieldRef<"documentos", 'Int'>
    readonly certidao_casamento: FieldRef<"documentos", 'String'>
    readonly certidao_nascimento: FieldRef<"documentos", 'String'>
    readonly comprovante_renda: FieldRef<"documentos", 'String'>
    readonly conjunto_plt_imovel: FieldRef<"documentos", 'String'>
    readonly escritura_assinada: FieldRef<"documentos", 'String'>
    readonly laudo_itbi: FieldRef<"documentos", 'String'>
    readonly manual_usuario: FieldRef<"documentos", 'String'>
    readonly quadro_resumo: FieldRef<"documentos", 'String'>
    readonly registro_imoveis_assinado: FieldRef<"documentos", 'String'>
    readonly createdAt: FieldRef<"documentos", 'DateTime'>
    readonly updatedAt: FieldRef<"documentos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * documentos findUnique
   */
  export type documentosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documentos
     */
    select?: documentosSelect<ExtArgs> | null
    /**
     * Filter, which documentos to fetch.
     */
    where: documentosWhereUniqueInput
  }

  /**
   * documentos findUniqueOrThrow
   */
  export type documentosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documentos
     */
    select?: documentosSelect<ExtArgs> | null
    /**
     * Filter, which documentos to fetch.
     */
    where: documentosWhereUniqueInput
  }

  /**
   * documentos findFirst
   */
  export type documentosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documentos
     */
    select?: documentosSelect<ExtArgs> | null
    /**
     * Filter, which documentos to fetch.
     */
    where?: documentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documentos to fetch.
     */
    orderBy?: documentosOrderByWithRelationInput | documentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for documentos.
     */
    cursor?: documentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of documentos.
     */
    distinct?: DocumentosScalarFieldEnum | DocumentosScalarFieldEnum[]
  }

  /**
   * documentos findFirstOrThrow
   */
  export type documentosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documentos
     */
    select?: documentosSelect<ExtArgs> | null
    /**
     * Filter, which documentos to fetch.
     */
    where?: documentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documentos to fetch.
     */
    orderBy?: documentosOrderByWithRelationInput | documentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for documentos.
     */
    cursor?: documentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of documentos.
     */
    distinct?: DocumentosScalarFieldEnum | DocumentosScalarFieldEnum[]
  }

  /**
   * documentos findMany
   */
  export type documentosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documentos
     */
    select?: documentosSelect<ExtArgs> | null
    /**
     * Filter, which documentos to fetch.
     */
    where?: documentosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of documentos to fetch.
     */
    orderBy?: documentosOrderByWithRelationInput | documentosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing documentos.
     */
    cursor?: documentosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` documentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` documentos.
     */
    skip?: number
    distinct?: DocumentosScalarFieldEnum | DocumentosScalarFieldEnum[]
  }

  /**
   * documentos create
   */
  export type documentosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documentos
     */
    select?: documentosSelect<ExtArgs> | null
    /**
     * The data needed to create a documentos.
     */
    data: XOR<documentosCreateInput, documentosUncheckedCreateInput>
  }

  /**
   * documentos createMany
   */
  export type documentosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many documentos.
     */
    data: documentosCreateManyInput | documentosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * documentos update
   */
  export type documentosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documentos
     */
    select?: documentosSelect<ExtArgs> | null
    /**
     * The data needed to update a documentos.
     */
    data: XOR<documentosUpdateInput, documentosUncheckedUpdateInput>
    /**
     * Choose, which documentos to update.
     */
    where: documentosWhereUniqueInput
  }

  /**
   * documentos updateMany
   */
  export type documentosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update documentos.
     */
    data: XOR<documentosUpdateManyMutationInput, documentosUncheckedUpdateManyInput>
    /**
     * Filter which documentos to update
     */
    where?: documentosWhereInput
  }

  /**
   * documentos upsert
   */
  export type documentosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documentos
     */
    select?: documentosSelect<ExtArgs> | null
    /**
     * The filter to search for the documentos to update in case it exists.
     */
    where: documentosWhereUniqueInput
    /**
     * In case the documentos found by the `where` argument doesn't exist, create a new documentos with this data.
     */
    create: XOR<documentosCreateInput, documentosUncheckedCreateInput>
    /**
     * In case the documentos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<documentosUpdateInput, documentosUncheckedUpdateInput>
  }

  /**
   * documentos delete
   */
  export type documentosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documentos
     */
    select?: documentosSelect<ExtArgs> | null
    /**
     * Filter which documentos to delete.
     */
    where: documentosWhereUniqueInput
  }

  /**
   * documentos deleteMany
   */
  export type documentosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which documentos to delete
     */
    where?: documentosWhereInput
  }

  /**
   * documentos without action
   */
  export type documentosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the documentos
     */
    select?: documentosSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ClienteScalarFieldEnum: {
    id_cliente: 'id_cliente',
    data_inclusao: 'data_inclusao',
    data_nasc: 'data_nasc',
    nome_cliente: 'nome_cliente',
    estado_civil: 'estado_civil',
    naturalidade: 'naturalidade',
    nacionalidade: 'nacionalidade',
    escolaridade: 'escolaridade',
    profissao: 'profissao',
    situacao: 'situacao',
    cpf_cliente: 'cpf_cliente',
    rg_cliente: 'rg_cliente',
    renda_mensal: 'renda_mensal',
    comprovante_renda: 'comprovante_renda',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ClienteScalarFieldEnum = (typeof ClienteScalarFieldEnum)[keyof typeof ClienteScalarFieldEnum]


  export const Dados_movelScalarFieldEnum: {
    id_dados_movel: 'id_dados_movel',
    fase_imovel: 'fase_imovel',
    nome_empreendimento: 'nome_empreendimento',
    lote_terreno: 'lote_terreno',
    area_terreno: 'area_terreno',
    matricula: 'matricula',
    logradouro: 'logradouro',
    numero: 'numero',
    complemento: 'complemento',
    bairro: 'bairro',
    cep: 'cep',
    cidade: 'cidade',
    estado: 'estado',
    num_casa: 'num_casa',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Dados_movelScalarFieldEnum = (typeof Dados_movelScalarFieldEnum)[keyof typeof Dados_movelScalarFieldEnum]


  export const Docs_modeloScalarFieldEnum: {
    id_docs_modelo: 'id_docs_modelo',
    boleto_pagto_escritura: 'boleto_pagto_escritura',
    boleto_pagto_escritura_itbi: 'boleto_pagto_escritura_itbi',
    boleto_pagto_escritura_registro: 'boleto_pagto_escritura_registro',
    promessa_compra_venda_assinado: 'promessa_compra_venda_assinado',
    promessa_compra_venda_modelo: 'promessa_compra_venda_modelo',
    promessa_compra_venda_preenchido: 'promessa_compra_venda_preenchido',
    quadro_resumo_modelo: 'quadro_resumo_modelo',
    requerimento_cartorio_modelo: 'requerimento_cartorio_modelo',
    requerimento_cartorio_preenchido: 'requerimento_cartorio_preenchido',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Docs_modeloScalarFieldEnum = (typeof Docs_modeloScalarFieldEnum)[keyof typeof Docs_modeloScalarFieldEnum]


  export const Formas_pagtoScalarFieldEnum: {
    id_formas_pagto: 'id_formas_pagto',
    valor_sinal_entrada: 'valor_sinal_entrada',
    qtd_parc_sinal_entrada: 'qtd_parc_sinal_entrada',
    data_venc_sinal_entada: 'data_venc_sinal_entada',
    saldo_restante: 'saldo_restante',
    qtd_parc_saldo_restante: 'qtd_parc_saldo_restante',
    valor_parc_saldo_rest: 'valor_parc_saldo_rest',
    data_vencto_parc_saldo_restante: 'data_vencto_parc_saldo_restante',
    forma_pagto_sinal_entrada: 'forma_pagto_sinal_entrada',
    forma_pagto_saldo_restante: 'forma_pagto_saldo_restante',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Formas_pagtoScalarFieldEnum = (typeof Formas_pagtoScalarFieldEnum)[keyof typeof Formas_pagtoScalarFieldEnum]


  export const DocumentosScalarFieldEnum: {
    id_documentos: 'id_documentos',
    certidao_casamento: 'certidao_casamento',
    certidao_nascimento: 'certidao_nascimento',
    comprovante_renda: 'comprovante_renda',
    conjunto_plt_imovel: 'conjunto_plt_imovel',
    escritura_assinada: 'escritura_assinada',
    laudo_itbi: 'laudo_itbi',
    manual_usuario: 'manual_usuario',
    quadro_resumo: 'quadro_resumo',
    registro_imoveis_assinado: 'registro_imoveis_assinado',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type DocumentosScalarFieldEnum = (typeof DocumentosScalarFieldEnum)[keyof typeof DocumentosScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type clienteWhereInput = {
    AND?: clienteWhereInput | clienteWhereInput[]
    OR?: clienteWhereInput[]
    NOT?: clienteWhereInput | clienteWhereInput[]
    id_cliente?: IntFilter<"cliente"> | number
    data_inclusao?: DateTimeFilter<"cliente"> | Date | string
    data_nasc?: DateTimeFilter<"cliente"> | Date | string
    nome_cliente?: StringFilter<"cliente"> | string
    estado_civil?: StringFilter<"cliente"> | string
    naturalidade?: StringFilter<"cliente"> | string
    nacionalidade?: StringFilter<"cliente"> | string
    escolaridade?: StringFilter<"cliente"> | string
    profissao?: StringFilter<"cliente"> | string
    situacao?: StringFilter<"cliente"> | string
    cpf_cliente?: StringFilter<"cliente"> | string
    rg_cliente?: StringFilter<"cliente"> | string
    renda_mensal?: DecimalFilter<"cliente"> | Decimal | DecimalJsLike | number | string
    comprovante_renda?: StringFilter<"cliente"> | string
    createdAt?: DateTimeFilter<"cliente"> | Date | string
    updatedAt?: DateTimeFilter<"cliente"> | Date | string
  }

  export type clienteOrderByWithRelationInput = {
    id_cliente?: SortOrder
    data_inclusao?: SortOrder
    data_nasc?: SortOrder
    nome_cliente?: SortOrder
    estado_civil?: SortOrder
    naturalidade?: SortOrder
    nacionalidade?: SortOrder
    escolaridade?: SortOrder
    profissao?: SortOrder
    situacao?: SortOrder
    cpf_cliente?: SortOrder
    rg_cliente?: SortOrder
    renda_mensal?: SortOrder
    comprovante_renda?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type clienteWhereUniqueInput = Prisma.AtLeast<{
    id_cliente?: number
    cpf_cliente?: string
    rg_cliente?: string
    AND?: clienteWhereInput | clienteWhereInput[]
    OR?: clienteWhereInput[]
    NOT?: clienteWhereInput | clienteWhereInput[]
    data_inclusao?: DateTimeFilter<"cliente"> | Date | string
    data_nasc?: DateTimeFilter<"cliente"> | Date | string
    nome_cliente?: StringFilter<"cliente"> | string
    estado_civil?: StringFilter<"cliente"> | string
    naturalidade?: StringFilter<"cliente"> | string
    nacionalidade?: StringFilter<"cliente"> | string
    escolaridade?: StringFilter<"cliente"> | string
    profissao?: StringFilter<"cliente"> | string
    situacao?: StringFilter<"cliente"> | string
    renda_mensal?: DecimalFilter<"cliente"> | Decimal | DecimalJsLike | number | string
    comprovante_renda?: StringFilter<"cliente"> | string
    createdAt?: DateTimeFilter<"cliente"> | Date | string
    updatedAt?: DateTimeFilter<"cliente"> | Date | string
  }, "id_cliente" | "cpf_cliente" | "rg_cliente">

  export type clienteOrderByWithAggregationInput = {
    id_cliente?: SortOrder
    data_inclusao?: SortOrder
    data_nasc?: SortOrder
    nome_cliente?: SortOrder
    estado_civil?: SortOrder
    naturalidade?: SortOrder
    nacionalidade?: SortOrder
    escolaridade?: SortOrder
    profissao?: SortOrder
    situacao?: SortOrder
    cpf_cliente?: SortOrder
    rg_cliente?: SortOrder
    renda_mensal?: SortOrder
    comprovante_renda?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: clienteCountOrderByAggregateInput
    _avg?: clienteAvgOrderByAggregateInput
    _max?: clienteMaxOrderByAggregateInput
    _min?: clienteMinOrderByAggregateInput
    _sum?: clienteSumOrderByAggregateInput
  }

  export type clienteScalarWhereWithAggregatesInput = {
    AND?: clienteScalarWhereWithAggregatesInput | clienteScalarWhereWithAggregatesInput[]
    OR?: clienteScalarWhereWithAggregatesInput[]
    NOT?: clienteScalarWhereWithAggregatesInput | clienteScalarWhereWithAggregatesInput[]
    id_cliente?: IntWithAggregatesFilter<"cliente"> | number
    data_inclusao?: DateTimeWithAggregatesFilter<"cliente"> | Date | string
    data_nasc?: DateTimeWithAggregatesFilter<"cliente"> | Date | string
    nome_cliente?: StringWithAggregatesFilter<"cliente"> | string
    estado_civil?: StringWithAggregatesFilter<"cliente"> | string
    naturalidade?: StringWithAggregatesFilter<"cliente"> | string
    nacionalidade?: StringWithAggregatesFilter<"cliente"> | string
    escolaridade?: StringWithAggregatesFilter<"cliente"> | string
    profissao?: StringWithAggregatesFilter<"cliente"> | string
    situacao?: StringWithAggregatesFilter<"cliente"> | string
    cpf_cliente?: StringWithAggregatesFilter<"cliente"> | string
    rg_cliente?: StringWithAggregatesFilter<"cliente"> | string
    renda_mensal?: DecimalWithAggregatesFilter<"cliente"> | Decimal | DecimalJsLike | number | string
    comprovante_renda?: StringWithAggregatesFilter<"cliente"> | string
    createdAt?: DateTimeWithAggregatesFilter<"cliente"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"cliente"> | Date | string
  }

  export type dados_movelWhereInput = {
    AND?: dados_movelWhereInput | dados_movelWhereInput[]
    OR?: dados_movelWhereInput[]
    NOT?: dados_movelWhereInput | dados_movelWhereInput[]
    id_dados_movel?: IntFilter<"dados_movel"> | number
    fase_imovel?: StringFilter<"dados_movel"> | string
    nome_empreendimento?: StringFilter<"dados_movel"> | string
    lote_terreno?: StringFilter<"dados_movel"> | string
    area_terreno?: StringFilter<"dados_movel"> | string
    matricula?: IntFilter<"dados_movel"> | number
    logradouro?: StringFilter<"dados_movel"> | string
    numero?: IntFilter<"dados_movel"> | number
    complemento?: StringNullableFilter<"dados_movel"> | string | null
    bairro?: StringFilter<"dados_movel"> | string
    cep?: StringFilter<"dados_movel"> | string
    cidade?: StringFilter<"dados_movel"> | string
    estado?: StringFilter<"dados_movel"> | string
    num_casa?: IntFilter<"dados_movel"> | number
    createdAt?: DateTimeFilter<"dados_movel"> | Date | string
    updatedAt?: DateTimeFilter<"dados_movel"> | Date | string
  }

  export type dados_movelOrderByWithRelationInput = {
    id_dados_movel?: SortOrder
    fase_imovel?: SortOrder
    nome_empreendimento?: SortOrder
    lote_terreno?: SortOrder
    area_terreno?: SortOrder
    matricula?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrderInput | SortOrder
    bairro?: SortOrder
    cep?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    num_casa?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type dados_movelWhereUniqueInput = Prisma.AtLeast<{
    id_dados_movel?: number
    AND?: dados_movelWhereInput | dados_movelWhereInput[]
    OR?: dados_movelWhereInput[]
    NOT?: dados_movelWhereInput | dados_movelWhereInput[]
    fase_imovel?: StringFilter<"dados_movel"> | string
    nome_empreendimento?: StringFilter<"dados_movel"> | string
    lote_terreno?: StringFilter<"dados_movel"> | string
    area_terreno?: StringFilter<"dados_movel"> | string
    matricula?: IntFilter<"dados_movel"> | number
    logradouro?: StringFilter<"dados_movel"> | string
    numero?: IntFilter<"dados_movel"> | number
    complemento?: StringNullableFilter<"dados_movel"> | string | null
    bairro?: StringFilter<"dados_movel"> | string
    cep?: StringFilter<"dados_movel"> | string
    cidade?: StringFilter<"dados_movel"> | string
    estado?: StringFilter<"dados_movel"> | string
    num_casa?: IntFilter<"dados_movel"> | number
    createdAt?: DateTimeFilter<"dados_movel"> | Date | string
    updatedAt?: DateTimeFilter<"dados_movel"> | Date | string
  }, "id_dados_movel">

  export type dados_movelOrderByWithAggregationInput = {
    id_dados_movel?: SortOrder
    fase_imovel?: SortOrder
    nome_empreendimento?: SortOrder
    lote_terreno?: SortOrder
    area_terreno?: SortOrder
    matricula?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrderInput | SortOrder
    bairro?: SortOrder
    cep?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    num_casa?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: dados_movelCountOrderByAggregateInput
    _avg?: dados_movelAvgOrderByAggregateInput
    _max?: dados_movelMaxOrderByAggregateInput
    _min?: dados_movelMinOrderByAggregateInput
    _sum?: dados_movelSumOrderByAggregateInput
  }

  export type dados_movelScalarWhereWithAggregatesInput = {
    AND?: dados_movelScalarWhereWithAggregatesInput | dados_movelScalarWhereWithAggregatesInput[]
    OR?: dados_movelScalarWhereWithAggregatesInput[]
    NOT?: dados_movelScalarWhereWithAggregatesInput | dados_movelScalarWhereWithAggregatesInput[]
    id_dados_movel?: IntWithAggregatesFilter<"dados_movel"> | number
    fase_imovel?: StringWithAggregatesFilter<"dados_movel"> | string
    nome_empreendimento?: StringWithAggregatesFilter<"dados_movel"> | string
    lote_terreno?: StringWithAggregatesFilter<"dados_movel"> | string
    area_terreno?: StringWithAggregatesFilter<"dados_movel"> | string
    matricula?: IntWithAggregatesFilter<"dados_movel"> | number
    logradouro?: StringWithAggregatesFilter<"dados_movel"> | string
    numero?: IntWithAggregatesFilter<"dados_movel"> | number
    complemento?: StringNullableWithAggregatesFilter<"dados_movel"> | string | null
    bairro?: StringWithAggregatesFilter<"dados_movel"> | string
    cep?: StringWithAggregatesFilter<"dados_movel"> | string
    cidade?: StringWithAggregatesFilter<"dados_movel"> | string
    estado?: StringWithAggregatesFilter<"dados_movel"> | string
    num_casa?: IntWithAggregatesFilter<"dados_movel"> | number
    createdAt?: DateTimeWithAggregatesFilter<"dados_movel"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"dados_movel"> | Date | string
  }

  export type docs_modeloWhereInput = {
    AND?: docs_modeloWhereInput | docs_modeloWhereInput[]
    OR?: docs_modeloWhereInput[]
    NOT?: docs_modeloWhereInput | docs_modeloWhereInput[]
    id_docs_modelo?: IntFilter<"docs_modelo"> | number
    boleto_pagto_escritura?: StringFilter<"docs_modelo"> | string
    boleto_pagto_escritura_itbi?: StringFilter<"docs_modelo"> | string
    boleto_pagto_escritura_registro?: StringFilter<"docs_modelo"> | string
    promessa_compra_venda_assinado?: StringFilter<"docs_modelo"> | string
    promessa_compra_venda_modelo?: StringFilter<"docs_modelo"> | string
    promessa_compra_venda_preenchido?: StringFilter<"docs_modelo"> | string
    quadro_resumo_modelo?: StringFilter<"docs_modelo"> | string
    requerimento_cartorio_modelo?: StringFilter<"docs_modelo"> | string
    requerimento_cartorio_preenchido?: StringFilter<"docs_modelo"> | string
    createdAt?: DateTimeFilter<"docs_modelo"> | Date | string
    updatedAt?: DateTimeFilter<"docs_modelo"> | Date | string
  }

  export type docs_modeloOrderByWithRelationInput = {
    id_docs_modelo?: SortOrder
    boleto_pagto_escritura?: SortOrder
    boleto_pagto_escritura_itbi?: SortOrder
    boleto_pagto_escritura_registro?: SortOrder
    promessa_compra_venda_assinado?: SortOrder
    promessa_compra_venda_modelo?: SortOrder
    promessa_compra_venda_preenchido?: SortOrder
    quadro_resumo_modelo?: SortOrder
    requerimento_cartorio_modelo?: SortOrder
    requerimento_cartorio_preenchido?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type docs_modeloWhereUniqueInput = Prisma.AtLeast<{
    id_docs_modelo?: number
    AND?: docs_modeloWhereInput | docs_modeloWhereInput[]
    OR?: docs_modeloWhereInput[]
    NOT?: docs_modeloWhereInput | docs_modeloWhereInput[]
    boleto_pagto_escritura?: StringFilter<"docs_modelo"> | string
    boleto_pagto_escritura_itbi?: StringFilter<"docs_modelo"> | string
    boleto_pagto_escritura_registro?: StringFilter<"docs_modelo"> | string
    promessa_compra_venda_assinado?: StringFilter<"docs_modelo"> | string
    promessa_compra_venda_modelo?: StringFilter<"docs_modelo"> | string
    promessa_compra_venda_preenchido?: StringFilter<"docs_modelo"> | string
    quadro_resumo_modelo?: StringFilter<"docs_modelo"> | string
    requerimento_cartorio_modelo?: StringFilter<"docs_modelo"> | string
    requerimento_cartorio_preenchido?: StringFilter<"docs_modelo"> | string
    createdAt?: DateTimeFilter<"docs_modelo"> | Date | string
    updatedAt?: DateTimeFilter<"docs_modelo"> | Date | string
  }, "id_docs_modelo">

  export type docs_modeloOrderByWithAggregationInput = {
    id_docs_modelo?: SortOrder
    boleto_pagto_escritura?: SortOrder
    boleto_pagto_escritura_itbi?: SortOrder
    boleto_pagto_escritura_registro?: SortOrder
    promessa_compra_venda_assinado?: SortOrder
    promessa_compra_venda_modelo?: SortOrder
    promessa_compra_venda_preenchido?: SortOrder
    quadro_resumo_modelo?: SortOrder
    requerimento_cartorio_modelo?: SortOrder
    requerimento_cartorio_preenchido?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: docs_modeloCountOrderByAggregateInput
    _avg?: docs_modeloAvgOrderByAggregateInput
    _max?: docs_modeloMaxOrderByAggregateInput
    _min?: docs_modeloMinOrderByAggregateInput
    _sum?: docs_modeloSumOrderByAggregateInput
  }

  export type docs_modeloScalarWhereWithAggregatesInput = {
    AND?: docs_modeloScalarWhereWithAggregatesInput | docs_modeloScalarWhereWithAggregatesInput[]
    OR?: docs_modeloScalarWhereWithAggregatesInput[]
    NOT?: docs_modeloScalarWhereWithAggregatesInput | docs_modeloScalarWhereWithAggregatesInput[]
    id_docs_modelo?: IntWithAggregatesFilter<"docs_modelo"> | number
    boleto_pagto_escritura?: StringWithAggregatesFilter<"docs_modelo"> | string
    boleto_pagto_escritura_itbi?: StringWithAggregatesFilter<"docs_modelo"> | string
    boleto_pagto_escritura_registro?: StringWithAggregatesFilter<"docs_modelo"> | string
    promessa_compra_venda_assinado?: StringWithAggregatesFilter<"docs_modelo"> | string
    promessa_compra_venda_modelo?: StringWithAggregatesFilter<"docs_modelo"> | string
    promessa_compra_venda_preenchido?: StringWithAggregatesFilter<"docs_modelo"> | string
    quadro_resumo_modelo?: StringWithAggregatesFilter<"docs_modelo"> | string
    requerimento_cartorio_modelo?: StringWithAggregatesFilter<"docs_modelo"> | string
    requerimento_cartorio_preenchido?: StringWithAggregatesFilter<"docs_modelo"> | string
    createdAt?: DateTimeWithAggregatesFilter<"docs_modelo"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"docs_modelo"> | Date | string
  }

  export type formas_pagtoWhereInput = {
    AND?: formas_pagtoWhereInput | formas_pagtoWhereInput[]
    OR?: formas_pagtoWhereInput[]
    NOT?: formas_pagtoWhereInput | formas_pagtoWhereInput[]
    id_formas_pagto?: IntFilter<"formas_pagto"> | number
    valor_sinal_entrada?: DecimalFilter<"formas_pagto"> | Decimal | DecimalJsLike | number | string
    qtd_parc_sinal_entrada?: IntFilter<"formas_pagto"> | number
    data_venc_sinal_entada?: StringFilter<"formas_pagto"> | string
    saldo_restante?: DecimalFilter<"formas_pagto"> | Decimal | DecimalJsLike | number | string
    qtd_parc_saldo_restante?: IntFilter<"formas_pagto"> | number
    valor_parc_saldo_rest?: DecimalFilter<"formas_pagto"> | Decimal | DecimalJsLike | number | string
    data_vencto_parc_saldo_restante?: StringFilter<"formas_pagto"> | string
    forma_pagto_sinal_entrada?: StringFilter<"formas_pagto"> | string
    forma_pagto_saldo_restante?: StringFilter<"formas_pagto"> | string
    createdAt?: DateTimeFilter<"formas_pagto"> | Date | string
    updatedAt?: DateTimeFilter<"formas_pagto"> | Date | string
  }

  export type formas_pagtoOrderByWithRelationInput = {
    id_formas_pagto?: SortOrder
    valor_sinal_entrada?: SortOrder
    qtd_parc_sinal_entrada?: SortOrder
    data_venc_sinal_entada?: SortOrder
    saldo_restante?: SortOrder
    qtd_parc_saldo_restante?: SortOrder
    valor_parc_saldo_rest?: SortOrder
    data_vencto_parc_saldo_restante?: SortOrder
    forma_pagto_sinal_entrada?: SortOrder
    forma_pagto_saldo_restante?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type formas_pagtoWhereUniqueInput = Prisma.AtLeast<{
    id_formas_pagto?: number
    AND?: formas_pagtoWhereInput | formas_pagtoWhereInput[]
    OR?: formas_pagtoWhereInput[]
    NOT?: formas_pagtoWhereInput | formas_pagtoWhereInput[]
    valor_sinal_entrada?: DecimalFilter<"formas_pagto"> | Decimal | DecimalJsLike | number | string
    qtd_parc_sinal_entrada?: IntFilter<"formas_pagto"> | number
    data_venc_sinal_entada?: StringFilter<"formas_pagto"> | string
    saldo_restante?: DecimalFilter<"formas_pagto"> | Decimal | DecimalJsLike | number | string
    qtd_parc_saldo_restante?: IntFilter<"formas_pagto"> | number
    valor_parc_saldo_rest?: DecimalFilter<"formas_pagto"> | Decimal | DecimalJsLike | number | string
    data_vencto_parc_saldo_restante?: StringFilter<"formas_pagto"> | string
    forma_pagto_sinal_entrada?: StringFilter<"formas_pagto"> | string
    forma_pagto_saldo_restante?: StringFilter<"formas_pagto"> | string
    createdAt?: DateTimeFilter<"formas_pagto"> | Date | string
    updatedAt?: DateTimeFilter<"formas_pagto"> | Date | string
  }, "id_formas_pagto">

  export type formas_pagtoOrderByWithAggregationInput = {
    id_formas_pagto?: SortOrder
    valor_sinal_entrada?: SortOrder
    qtd_parc_sinal_entrada?: SortOrder
    data_venc_sinal_entada?: SortOrder
    saldo_restante?: SortOrder
    qtd_parc_saldo_restante?: SortOrder
    valor_parc_saldo_rest?: SortOrder
    data_vencto_parc_saldo_restante?: SortOrder
    forma_pagto_sinal_entrada?: SortOrder
    forma_pagto_saldo_restante?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: formas_pagtoCountOrderByAggregateInput
    _avg?: formas_pagtoAvgOrderByAggregateInput
    _max?: formas_pagtoMaxOrderByAggregateInput
    _min?: formas_pagtoMinOrderByAggregateInput
    _sum?: formas_pagtoSumOrderByAggregateInput
  }

  export type formas_pagtoScalarWhereWithAggregatesInput = {
    AND?: formas_pagtoScalarWhereWithAggregatesInput | formas_pagtoScalarWhereWithAggregatesInput[]
    OR?: formas_pagtoScalarWhereWithAggregatesInput[]
    NOT?: formas_pagtoScalarWhereWithAggregatesInput | formas_pagtoScalarWhereWithAggregatesInput[]
    id_formas_pagto?: IntWithAggregatesFilter<"formas_pagto"> | number
    valor_sinal_entrada?: DecimalWithAggregatesFilter<"formas_pagto"> | Decimal | DecimalJsLike | number | string
    qtd_parc_sinal_entrada?: IntWithAggregatesFilter<"formas_pagto"> | number
    data_venc_sinal_entada?: StringWithAggregatesFilter<"formas_pagto"> | string
    saldo_restante?: DecimalWithAggregatesFilter<"formas_pagto"> | Decimal | DecimalJsLike | number | string
    qtd_parc_saldo_restante?: IntWithAggregatesFilter<"formas_pagto"> | number
    valor_parc_saldo_rest?: DecimalWithAggregatesFilter<"formas_pagto"> | Decimal | DecimalJsLike | number | string
    data_vencto_parc_saldo_restante?: StringWithAggregatesFilter<"formas_pagto"> | string
    forma_pagto_sinal_entrada?: StringWithAggregatesFilter<"formas_pagto"> | string
    forma_pagto_saldo_restante?: StringWithAggregatesFilter<"formas_pagto"> | string
    createdAt?: DateTimeWithAggregatesFilter<"formas_pagto"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"formas_pagto"> | Date | string
  }

  export type documentosWhereInput = {
    AND?: documentosWhereInput | documentosWhereInput[]
    OR?: documentosWhereInput[]
    NOT?: documentosWhereInput | documentosWhereInput[]
    id_documentos?: IntFilter<"documentos"> | number
    certidao_casamento?: StringNullableFilter<"documentos"> | string | null
    certidao_nascimento?: StringNullableFilter<"documentos"> | string | null
    comprovante_renda?: StringFilter<"documentos"> | string
    conjunto_plt_imovel?: StringFilter<"documentos"> | string
    escritura_assinada?: StringFilter<"documentos"> | string
    laudo_itbi?: StringFilter<"documentos"> | string
    manual_usuario?: StringNullableFilter<"documentos"> | string | null
    quadro_resumo?: StringNullableFilter<"documentos"> | string | null
    registro_imoveis_assinado?: StringFilter<"documentos"> | string
    createdAt?: DateTimeFilter<"documentos"> | Date | string
    updatedAt?: DateTimeFilter<"documentos"> | Date | string
  }

  export type documentosOrderByWithRelationInput = {
    id_documentos?: SortOrder
    certidao_casamento?: SortOrderInput | SortOrder
    certidao_nascimento?: SortOrderInput | SortOrder
    comprovante_renda?: SortOrder
    conjunto_plt_imovel?: SortOrder
    escritura_assinada?: SortOrder
    laudo_itbi?: SortOrder
    manual_usuario?: SortOrderInput | SortOrder
    quadro_resumo?: SortOrderInput | SortOrder
    registro_imoveis_assinado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type documentosWhereUniqueInput = Prisma.AtLeast<{
    id_documentos?: number
    AND?: documentosWhereInput | documentosWhereInput[]
    OR?: documentosWhereInput[]
    NOT?: documentosWhereInput | documentosWhereInput[]
    certidao_casamento?: StringNullableFilter<"documentos"> | string | null
    certidao_nascimento?: StringNullableFilter<"documentos"> | string | null
    comprovante_renda?: StringFilter<"documentos"> | string
    conjunto_plt_imovel?: StringFilter<"documentos"> | string
    escritura_assinada?: StringFilter<"documentos"> | string
    laudo_itbi?: StringFilter<"documentos"> | string
    manual_usuario?: StringNullableFilter<"documentos"> | string | null
    quadro_resumo?: StringNullableFilter<"documentos"> | string | null
    registro_imoveis_assinado?: StringFilter<"documentos"> | string
    createdAt?: DateTimeFilter<"documentos"> | Date | string
    updatedAt?: DateTimeFilter<"documentos"> | Date | string
  }, "id_documentos">

  export type documentosOrderByWithAggregationInput = {
    id_documentos?: SortOrder
    certidao_casamento?: SortOrderInput | SortOrder
    certidao_nascimento?: SortOrderInput | SortOrder
    comprovante_renda?: SortOrder
    conjunto_plt_imovel?: SortOrder
    escritura_assinada?: SortOrder
    laudo_itbi?: SortOrder
    manual_usuario?: SortOrderInput | SortOrder
    quadro_resumo?: SortOrderInput | SortOrder
    registro_imoveis_assinado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: documentosCountOrderByAggregateInput
    _avg?: documentosAvgOrderByAggregateInput
    _max?: documentosMaxOrderByAggregateInput
    _min?: documentosMinOrderByAggregateInput
    _sum?: documentosSumOrderByAggregateInput
  }

  export type documentosScalarWhereWithAggregatesInput = {
    AND?: documentosScalarWhereWithAggregatesInput | documentosScalarWhereWithAggregatesInput[]
    OR?: documentosScalarWhereWithAggregatesInput[]
    NOT?: documentosScalarWhereWithAggregatesInput | documentosScalarWhereWithAggregatesInput[]
    id_documentos?: IntWithAggregatesFilter<"documentos"> | number
    certidao_casamento?: StringNullableWithAggregatesFilter<"documentos"> | string | null
    certidao_nascimento?: StringNullableWithAggregatesFilter<"documentos"> | string | null
    comprovante_renda?: StringWithAggregatesFilter<"documentos"> | string
    conjunto_plt_imovel?: StringWithAggregatesFilter<"documentos"> | string
    escritura_assinada?: StringWithAggregatesFilter<"documentos"> | string
    laudo_itbi?: StringWithAggregatesFilter<"documentos"> | string
    manual_usuario?: StringNullableWithAggregatesFilter<"documentos"> | string | null
    quadro_resumo?: StringNullableWithAggregatesFilter<"documentos"> | string | null
    registro_imoveis_assinado?: StringWithAggregatesFilter<"documentos"> | string
    createdAt?: DateTimeWithAggregatesFilter<"documentos"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"documentos"> | Date | string
  }

  export type clienteCreateInput = {
    data_inclusao: Date | string
    data_nasc: Date | string
    nome_cliente: string
    estado_civil: string
    naturalidade: string
    nacionalidade: string
    escolaridade: string
    profissao: string
    situacao: string
    cpf_cliente: string
    rg_cliente: string
    renda_mensal: Decimal | DecimalJsLike | number | string
    comprovante_renda: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type clienteUncheckedCreateInput = {
    id_cliente?: number
    data_inclusao: Date | string
    data_nasc: Date | string
    nome_cliente: string
    estado_civil: string
    naturalidade: string
    nacionalidade: string
    escolaridade: string
    profissao: string
    situacao: string
    cpf_cliente: string
    rg_cliente: string
    renda_mensal: Decimal | DecimalJsLike | number | string
    comprovante_renda: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type clienteUpdateInput = {
    data_inclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    nome_cliente?: StringFieldUpdateOperationsInput | string
    estado_civil?: StringFieldUpdateOperationsInput | string
    naturalidade?: StringFieldUpdateOperationsInput | string
    nacionalidade?: StringFieldUpdateOperationsInput | string
    escolaridade?: StringFieldUpdateOperationsInput | string
    profissao?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    cpf_cliente?: StringFieldUpdateOperationsInput | string
    rg_cliente?: StringFieldUpdateOperationsInput | string
    renda_mensal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    comprovante_renda?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type clienteUncheckedUpdateInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    data_inclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    nome_cliente?: StringFieldUpdateOperationsInput | string
    estado_civil?: StringFieldUpdateOperationsInput | string
    naturalidade?: StringFieldUpdateOperationsInput | string
    nacionalidade?: StringFieldUpdateOperationsInput | string
    escolaridade?: StringFieldUpdateOperationsInput | string
    profissao?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    cpf_cliente?: StringFieldUpdateOperationsInput | string
    rg_cliente?: StringFieldUpdateOperationsInput | string
    renda_mensal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    comprovante_renda?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type clienteCreateManyInput = {
    id_cliente?: number
    data_inclusao: Date | string
    data_nasc: Date | string
    nome_cliente: string
    estado_civil: string
    naturalidade: string
    nacionalidade: string
    escolaridade: string
    profissao: string
    situacao: string
    cpf_cliente: string
    rg_cliente: string
    renda_mensal: Decimal | DecimalJsLike | number | string
    comprovante_renda: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type clienteUpdateManyMutationInput = {
    data_inclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    nome_cliente?: StringFieldUpdateOperationsInput | string
    estado_civil?: StringFieldUpdateOperationsInput | string
    naturalidade?: StringFieldUpdateOperationsInput | string
    nacionalidade?: StringFieldUpdateOperationsInput | string
    escolaridade?: StringFieldUpdateOperationsInput | string
    profissao?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    cpf_cliente?: StringFieldUpdateOperationsInput | string
    rg_cliente?: StringFieldUpdateOperationsInput | string
    renda_mensal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    comprovante_renda?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type clienteUncheckedUpdateManyInput = {
    id_cliente?: IntFieldUpdateOperationsInput | number
    data_inclusao?: DateTimeFieldUpdateOperationsInput | Date | string
    data_nasc?: DateTimeFieldUpdateOperationsInput | Date | string
    nome_cliente?: StringFieldUpdateOperationsInput | string
    estado_civil?: StringFieldUpdateOperationsInput | string
    naturalidade?: StringFieldUpdateOperationsInput | string
    nacionalidade?: StringFieldUpdateOperationsInput | string
    escolaridade?: StringFieldUpdateOperationsInput | string
    profissao?: StringFieldUpdateOperationsInput | string
    situacao?: StringFieldUpdateOperationsInput | string
    cpf_cliente?: StringFieldUpdateOperationsInput | string
    rg_cliente?: StringFieldUpdateOperationsInput | string
    renda_mensal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    comprovante_renda?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type dados_movelCreateInput = {
    fase_imovel: string
    nome_empreendimento: string
    lote_terreno: string
    area_terreno: string
    matricula: number
    logradouro: string
    numero: number
    complemento?: string | null
    bairro: string
    cep: string
    cidade: string
    estado: string
    num_casa: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type dados_movelUncheckedCreateInput = {
    id_dados_movel?: number
    fase_imovel: string
    nome_empreendimento: string
    lote_terreno: string
    area_terreno: string
    matricula: number
    logradouro: string
    numero: number
    complemento?: string | null
    bairro: string
    cep: string
    cidade: string
    estado: string
    num_casa: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type dados_movelUpdateInput = {
    fase_imovel?: StringFieldUpdateOperationsInput | string
    nome_empreendimento?: StringFieldUpdateOperationsInput | string
    lote_terreno?: StringFieldUpdateOperationsInput | string
    area_terreno?: StringFieldUpdateOperationsInput | string
    matricula?: IntFieldUpdateOperationsInput | number
    logradouro?: StringFieldUpdateOperationsInput | string
    numero?: IntFieldUpdateOperationsInput | number
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    num_casa?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type dados_movelUncheckedUpdateInput = {
    id_dados_movel?: IntFieldUpdateOperationsInput | number
    fase_imovel?: StringFieldUpdateOperationsInput | string
    nome_empreendimento?: StringFieldUpdateOperationsInput | string
    lote_terreno?: StringFieldUpdateOperationsInput | string
    area_terreno?: StringFieldUpdateOperationsInput | string
    matricula?: IntFieldUpdateOperationsInput | number
    logradouro?: StringFieldUpdateOperationsInput | string
    numero?: IntFieldUpdateOperationsInput | number
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    num_casa?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type dados_movelCreateManyInput = {
    id_dados_movel?: number
    fase_imovel: string
    nome_empreendimento: string
    lote_terreno: string
    area_terreno: string
    matricula: number
    logradouro: string
    numero: number
    complemento?: string | null
    bairro: string
    cep: string
    cidade: string
    estado: string
    num_casa: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type dados_movelUpdateManyMutationInput = {
    fase_imovel?: StringFieldUpdateOperationsInput | string
    nome_empreendimento?: StringFieldUpdateOperationsInput | string
    lote_terreno?: StringFieldUpdateOperationsInput | string
    area_terreno?: StringFieldUpdateOperationsInput | string
    matricula?: IntFieldUpdateOperationsInput | number
    logradouro?: StringFieldUpdateOperationsInput | string
    numero?: IntFieldUpdateOperationsInput | number
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    num_casa?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type dados_movelUncheckedUpdateManyInput = {
    id_dados_movel?: IntFieldUpdateOperationsInput | number
    fase_imovel?: StringFieldUpdateOperationsInput | string
    nome_empreendimento?: StringFieldUpdateOperationsInput | string
    lote_terreno?: StringFieldUpdateOperationsInput | string
    area_terreno?: StringFieldUpdateOperationsInput | string
    matricula?: IntFieldUpdateOperationsInput | number
    logradouro?: StringFieldUpdateOperationsInput | string
    numero?: IntFieldUpdateOperationsInput | number
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    cep?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    num_casa?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type docs_modeloCreateInput = {
    boleto_pagto_escritura: string
    boleto_pagto_escritura_itbi: string
    boleto_pagto_escritura_registro: string
    promessa_compra_venda_assinado: string
    promessa_compra_venda_modelo: string
    promessa_compra_venda_preenchido: string
    quadro_resumo_modelo: string
    requerimento_cartorio_modelo: string
    requerimento_cartorio_preenchido: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type docs_modeloUncheckedCreateInput = {
    id_docs_modelo?: number
    boleto_pagto_escritura: string
    boleto_pagto_escritura_itbi: string
    boleto_pagto_escritura_registro: string
    promessa_compra_venda_assinado: string
    promessa_compra_venda_modelo: string
    promessa_compra_venda_preenchido: string
    quadro_resumo_modelo: string
    requerimento_cartorio_modelo: string
    requerimento_cartorio_preenchido: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type docs_modeloUpdateInput = {
    boleto_pagto_escritura?: StringFieldUpdateOperationsInput | string
    boleto_pagto_escritura_itbi?: StringFieldUpdateOperationsInput | string
    boleto_pagto_escritura_registro?: StringFieldUpdateOperationsInput | string
    promessa_compra_venda_assinado?: StringFieldUpdateOperationsInput | string
    promessa_compra_venda_modelo?: StringFieldUpdateOperationsInput | string
    promessa_compra_venda_preenchido?: StringFieldUpdateOperationsInput | string
    quadro_resumo_modelo?: StringFieldUpdateOperationsInput | string
    requerimento_cartorio_modelo?: StringFieldUpdateOperationsInput | string
    requerimento_cartorio_preenchido?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type docs_modeloUncheckedUpdateInput = {
    id_docs_modelo?: IntFieldUpdateOperationsInput | number
    boleto_pagto_escritura?: StringFieldUpdateOperationsInput | string
    boleto_pagto_escritura_itbi?: StringFieldUpdateOperationsInput | string
    boleto_pagto_escritura_registro?: StringFieldUpdateOperationsInput | string
    promessa_compra_venda_assinado?: StringFieldUpdateOperationsInput | string
    promessa_compra_venda_modelo?: StringFieldUpdateOperationsInput | string
    promessa_compra_venda_preenchido?: StringFieldUpdateOperationsInput | string
    quadro_resumo_modelo?: StringFieldUpdateOperationsInput | string
    requerimento_cartorio_modelo?: StringFieldUpdateOperationsInput | string
    requerimento_cartorio_preenchido?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type docs_modeloCreateManyInput = {
    id_docs_modelo?: number
    boleto_pagto_escritura: string
    boleto_pagto_escritura_itbi: string
    boleto_pagto_escritura_registro: string
    promessa_compra_venda_assinado: string
    promessa_compra_venda_modelo: string
    promessa_compra_venda_preenchido: string
    quadro_resumo_modelo: string
    requerimento_cartorio_modelo: string
    requerimento_cartorio_preenchido: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type docs_modeloUpdateManyMutationInput = {
    boleto_pagto_escritura?: StringFieldUpdateOperationsInput | string
    boleto_pagto_escritura_itbi?: StringFieldUpdateOperationsInput | string
    boleto_pagto_escritura_registro?: StringFieldUpdateOperationsInput | string
    promessa_compra_venda_assinado?: StringFieldUpdateOperationsInput | string
    promessa_compra_venda_modelo?: StringFieldUpdateOperationsInput | string
    promessa_compra_venda_preenchido?: StringFieldUpdateOperationsInput | string
    quadro_resumo_modelo?: StringFieldUpdateOperationsInput | string
    requerimento_cartorio_modelo?: StringFieldUpdateOperationsInput | string
    requerimento_cartorio_preenchido?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type docs_modeloUncheckedUpdateManyInput = {
    id_docs_modelo?: IntFieldUpdateOperationsInput | number
    boleto_pagto_escritura?: StringFieldUpdateOperationsInput | string
    boleto_pagto_escritura_itbi?: StringFieldUpdateOperationsInput | string
    boleto_pagto_escritura_registro?: StringFieldUpdateOperationsInput | string
    promessa_compra_venda_assinado?: StringFieldUpdateOperationsInput | string
    promessa_compra_venda_modelo?: StringFieldUpdateOperationsInput | string
    promessa_compra_venda_preenchido?: StringFieldUpdateOperationsInput | string
    quadro_resumo_modelo?: StringFieldUpdateOperationsInput | string
    requerimento_cartorio_modelo?: StringFieldUpdateOperationsInput | string
    requerimento_cartorio_preenchido?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type formas_pagtoCreateInput = {
    valor_sinal_entrada: Decimal | DecimalJsLike | number | string
    qtd_parc_sinal_entrada: number
    data_venc_sinal_entada: string
    saldo_restante: Decimal | DecimalJsLike | number | string
    qtd_parc_saldo_restante: number
    valor_parc_saldo_rest: Decimal | DecimalJsLike | number | string
    data_vencto_parc_saldo_restante: string
    forma_pagto_sinal_entrada: string
    forma_pagto_saldo_restante: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type formas_pagtoUncheckedCreateInput = {
    id_formas_pagto?: number
    valor_sinal_entrada: Decimal | DecimalJsLike | number | string
    qtd_parc_sinal_entrada: number
    data_venc_sinal_entada: string
    saldo_restante: Decimal | DecimalJsLike | number | string
    qtd_parc_saldo_restante: number
    valor_parc_saldo_rest: Decimal | DecimalJsLike | number | string
    data_vencto_parc_saldo_restante: string
    forma_pagto_sinal_entrada: string
    forma_pagto_saldo_restante: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type formas_pagtoUpdateInput = {
    valor_sinal_entrada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    qtd_parc_sinal_entrada?: IntFieldUpdateOperationsInput | number
    data_venc_sinal_entada?: StringFieldUpdateOperationsInput | string
    saldo_restante?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    qtd_parc_saldo_restante?: IntFieldUpdateOperationsInput | number
    valor_parc_saldo_rest?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_vencto_parc_saldo_restante?: StringFieldUpdateOperationsInput | string
    forma_pagto_sinal_entrada?: StringFieldUpdateOperationsInput | string
    forma_pagto_saldo_restante?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type formas_pagtoUncheckedUpdateInput = {
    id_formas_pagto?: IntFieldUpdateOperationsInput | number
    valor_sinal_entrada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    qtd_parc_sinal_entrada?: IntFieldUpdateOperationsInput | number
    data_venc_sinal_entada?: StringFieldUpdateOperationsInput | string
    saldo_restante?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    qtd_parc_saldo_restante?: IntFieldUpdateOperationsInput | number
    valor_parc_saldo_rest?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_vencto_parc_saldo_restante?: StringFieldUpdateOperationsInput | string
    forma_pagto_sinal_entrada?: StringFieldUpdateOperationsInput | string
    forma_pagto_saldo_restante?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type formas_pagtoCreateManyInput = {
    id_formas_pagto?: number
    valor_sinal_entrada: Decimal | DecimalJsLike | number | string
    qtd_parc_sinal_entrada: number
    data_venc_sinal_entada: string
    saldo_restante: Decimal | DecimalJsLike | number | string
    qtd_parc_saldo_restante: number
    valor_parc_saldo_rest: Decimal | DecimalJsLike | number | string
    data_vencto_parc_saldo_restante: string
    forma_pagto_sinal_entrada: string
    forma_pagto_saldo_restante: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type formas_pagtoUpdateManyMutationInput = {
    valor_sinal_entrada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    qtd_parc_sinal_entrada?: IntFieldUpdateOperationsInput | number
    data_venc_sinal_entada?: StringFieldUpdateOperationsInput | string
    saldo_restante?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    qtd_parc_saldo_restante?: IntFieldUpdateOperationsInput | number
    valor_parc_saldo_rest?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_vencto_parc_saldo_restante?: StringFieldUpdateOperationsInput | string
    forma_pagto_sinal_entrada?: StringFieldUpdateOperationsInput | string
    forma_pagto_saldo_restante?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type formas_pagtoUncheckedUpdateManyInput = {
    id_formas_pagto?: IntFieldUpdateOperationsInput | number
    valor_sinal_entrada?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    qtd_parc_sinal_entrada?: IntFieldUpdateOperationsInput | number
    data_venc_sinal_entada?: StringFieldUpdateOperationsInput | string
    saldo_restante?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    qtd_parc_saldo_restante?: IntFieldUpdateOperationsInput | number
    valor_parc_saldo_rest?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    data_vencto_parc_saldo_restante?: StringFieldUpdateOperationsInput | string
    forma_pagto_sinal_entrada?: StringFieldUpdateOperationsInput | string
    forma_pagto_saldo_restante?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type documentosCreateInput = {
    certidao_casamento?: string | null
    certidao_nascimento?: string | null
    comprovante_renda: string
    conjunto_plt_imovel: string
    escritura_assinada: string
    laudo_itbi: string
    manual_usuario?: string | null
    quadro_resumo?: string | null
    registro_imoveis_assinado: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type documentosUncheckedCreateInput = {
    id_documentos?: number
    certidao_casamento?: string | null
    certidao_nascimento?: string | null
    comprovante_renda: string
    conjunto_plt_imovel: string
    escritura_assinada: string
    laudo_itbi: string
    manual_usuario?: string | null
    quadro_resumo?: string | null
    registro_imoveis_assinado: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type documentosUpdateInput = {
    certidao_casamento?: NullableStringFieldUpdateOperationsInput | string | null
    certidao_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante_renda?: StringFieldUpdateOperationsInput | string
    conjunto_plt_imovel?: StringFieldUpdateOperationsInput | string
    escritura_assinada?: StringFieldUpdateOperationsInput | string
    laudo_itbi?: StringFieldUpdateOperationsInput | string
    manual_usuario?: NullableStringFieldUpdateOperationsInput | string | null
    quadro_resumo?: NullableStringFieldUpdateOperationsInput | string | null
    registro_imoveis_assinado?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type documentosUncheckedUpdateInput = {
    id_documentos?: IntFieldUpdateOperationsInput | number
    certidao_casamento?: NullableStringFieldUpdateOperationsInput | string | null
    certidao_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante_renda?: StringFieldUpdateOperationsInput | string
    conjunto_plt_imovel?: StringFieldUpdateOperationsInput | string
    escritura_assinada?: StringFieldUpdateOperationsInput | string
    laudo_itbi?: StringFieldUpdateOperationsInput | string
    manual_usuario?: NullableStringFieldUpdateOperationsInput | string | null
    quadro_resumo?: NullableStringFieldUpdateOperationsInput | string | null
    registro_imoveis_assinado?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type documentosCreateManyInput = {
    id_documentos?: number
    certidao_casamento?: string | null
    certidao_nascimento?: string | null
    comprovante_renda: string
    conjunto_plt_imovel: string
    escritura_assinada: string
    laudo_itbi: string
    manual_usuario?: string | null
    quadro_resumo?: string | null
    registro_imoveis_assinado: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type documentosUpdateManyMutationInput = {
    certidao_casamento?: NullableStringFieldUpdateOperationsInput | string | null
    certidao_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante_renda?: StringFieldUpdateOperationsInput | string
    conjunto_plt_imovel?: StringFieldUpdateOperationsInput | string
    escritura_assinada?: StringFieldUpdateOperationsInput | string
    laudo_itbi?: StringFieldUpdateOperationsInput | string
    manual_usuario?: NullableStringFieldUpdateOperationsInput | string | null
    quadro_resumo?: NullableStringFieldUpdateOperationsInput | string | null
    registro_imoveis_assinado?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type documentosUncheckedUpdateManyInput = {
    id_documentos?: IntFieldUpdateOperationsInput | number
    certidao_casamento?: NullableStringFieldUpdateOperationsInput | string | null
    certidao_nascimento?: NullableStringFieldUpdateOperationsInput | string | null
    comprovante_renda?: StringFieldUpdateOperationsInput | string
    conjunto_plt_imovel?: StringFieldUpdateOperationsInput | string
    escritura_assinada?: StringFieldUpdateOperationsInput | string
    laudo_itbi?: StringFieldUpdateOperationsInput | string
    manual_usuario?: NullableStringFieldUpdateOperationsInput | string | null
    quadro_resumo?: NullableStringFieldUpdateOperationsInput | string | null
    registro_imoveis_assinado?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type clienteCountOrderByAggregateInput = {
    id_cliente?: SortOrder
    data_inclusao?: SortOrder
    data_nasc?: SortOrder
    nome_cliente?: SortOrder
    estado_civil?: SortOrder
    naturalidade?: SortOrder
    nacionalidade?: SortOrder
    escolaridade?: SortOrder
    profissao?: SortOrder
    situacao?: SortOrder
    cpf_cliente?: SortOrder
    rg_cliente?: SortOrder
    renda_mensal?: SortOrder
    comprovante_renda?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type clienteAvgOrderByAggregateInput = {
    id_cliente?: SortOrder
    renda_mensal?: SortOrder
  }

  export type clienteMaxOrderByAggregateInput = {
    id_cliente?: SortOrder
    data_inclusao?: SortOrder
    data_nasc?: SortOrder
    nome_cliente?: SortOrder
    estado_civil?: SortOrder
    naturalidade?: SortOrder
    nacionalidade?: SortOrder
    escolaridade?: SortOrder
    profissao?: SortOrder
    situacao?: SortOrder
    cpf_cliente?: SortOrder
    rg_cliente?: SortOrder
    renda_mensal?: SortOrder
    comprovante_renda?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type clienteMinOrderByAggregateInput = {
    id_cliente?: SortOrder
    data_inclusao?: SortOrder
    data_nasc?: SortOrder
    nome_cliente?: SortOrder
    estado_civil?: SortOrder
    naturalidade?: SortOrder
    nacionalidade?: SortOrder
    escolaridade?: SortOrder
    profissao?: SortOrder
    situacao?: SortOrder
    cpf_cliente?: SortOrder
    rg_cliente?: SortOrder
    renda_mensal?: SortOrder
    comprovante_renda?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type clienteSumOrderByAggregateInput = {
    id_cliente?: SortOrder
    renda_mensal?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type dados_movelCountOrderByAggregateInput = {
    id_dados_movel?: SortOrder
    fase_imovel?: SortOrder
    nome_empreendimento?: SortOrder
    lote_terreno?: SortOrder
    area_terreno?: SortOrder
    matricula?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cep?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    num_casa?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type dados_movelAvgOrderByAggregateInput = {
    id_dados_movel?: SortOrder
    matricula?: SortOrder
    numero?: SortOrder
    num_casa?: SortOrder
  }

  export type dados_movelMaxOrderByAggregateInput = {
    id_dados_movel?: SortOrder
    fase_imovel?: SortOrder
    nome_empreendimento?: SortOrder
    lote_terreno?: SortOrder
    area_terreno?: SortOrder
    matricula?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cep?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    num_casa?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type dados_movelMinOrderByAggregateInput = {
    id_dados_movel?: SortOrder
    fase_imovel?: SortOrder
    nome_empreendimento?: SortOrder
    lote_terreno?: SortOrder
    area_terreno?: SortOrder
    matricula?: SortOrder
    logradouro?: SortOrder
    numero?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    cep?: SortOrder
    cidade?: SortOrder
    estado?: SortOrder
    num_casa?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type dados_movelSumOrderByAggregateInput = {
    id_dados_movel?: SortOrder
    matricula?: SortOrder
    numero?: SortOrder
    num_casa?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type docs_modeloCountOrderByAggregateInput = {
    id_docs_modelo?: SortOrder
    boleto_pagto_escritura?: SortOrder
    boleto_pagto_escritura_itbi?: SortOrder
    boleto_pagto_escritura_registro?: SortOrder
    promessa_compra_venda_assinado?: SortOrder
    promessa_compra_venda_modelo?: SortOrder
    promessa_compra_venda_preenchido?: SortOrder
    quadro_resumo_modelo?: SortOrder
    requerimento_cartorio_modelo?: SortOrder
    requerimento_cartorio_preenchido?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type docs_modeloAvgOrderByAggregateInput = {
    id_docs_modelo?: SortOrder
  }

  export type docs_modeloMaxOrderByAggregateInput = {
    id_docs_modelo?: SortOrder
    boleto_pagto_escritura?: SortOrder
    boleto_pagto_escritura_itbi?: SortOrder
    boleto_pagto_escritura_registro?: SortOrder
    promessa_compra_venda_assinado?: SortOrder
    promessa_compra_venda_modelo?: SortOrder
    promessa_compra_venda_preenchido?: SortOrder
    quadro_resumo_modelo?: SortOrder
    requerimento_cartorio_modelo?: SortOrder
    requerimento_cartorio_preenchido?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type docs_modeloMinOrderByAggregateInput = {
    id_docs_modelo?: SortOrder
    boleto_pagto_escritura?: SortOrder
    boleto_pagto_escritura_itbi?: SortOrder
    boleto_pagto_escritura_registro?: SortOrder
    promessa_compra_venda_assinado?: SortOrder
    promessa_compra_venda_modelo?: SortOrder
    promessa_compra_venda_preenchido?: SortOrder
    quadro_resumo_modelo?: SortOrder
    requerimento_cartorio_modelo?: SortOrder
    requerimento_cartorio_preenchido?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type docs_modeloSumOrderByAggregateInput = {
    id_docs_modelo?: SortOrder
  }

  export type formas_pagtoCountOrderByAggregateInput = {
    id_formas_pagto?: SortOrder
    valor_sinal_entrada?: SortOrder
    qtd_parc_sinal_entrada?: SortOrder
    data_venc_sinal_entada?: SortOrder
    saldo_restante?: SortOrder
    qtd_parc_saldo_restante?: SortOrder
    valor_parc_saldo_rest?: SortOrder
    data_vencto_parc_saldo_restante?: SortOrder
    forma_pagto_sinal_entrada?: SortOrder
    forma_pagto_saldo_restante?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type formas_pagtoAvgOrderByAggregateInput = {
    id_formas_pagto?: SortOrder
    valor_sinal_entrada?: SortOrder
    qtd_parc_sinal_entrada?: SortOrder
    saldo_restante?: SortOrder
    qtd_parc_saldo_restante?: SortOrder
    valor_parc_saldo_rest?: SortOrder
  }

  export type formas_pagtoMaxOrderByAggregateInput = {
    id_formas_pagto?: SortOrder
    valor_sinal_entrada?: SortOrder
    qtd_parc_sinal_entrada?: SortOrder
    data_venc_sinal_entada?: SortOrder
    saldo_restante?: SortOrder
    qtd_parc_saldo_restante?: SortOrder
    valor_parc_saldo_rest?: SortOrder
    data_vencto_parc_saldo_restante?: SortOrder
    forma_pagto_sinal_entrada?: SortOrder
    forma_pagto_saldo_restante?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type formas_pagtoMinOrderByAggregateInput = {
    id_formas_pagto?: SortOrder
    valor_sinal_entrada?: SortOrder
    qtd_parc_sinal_entrada?: SortOrder
    data_venc_sinal_entada?: SortOrder
    saldo_restante?: SortOrder
    qtd_parc_saldo_restante?: SortOrder
    valor_parc_saldo_rest?: SortOrder
    data_vencto_parc_saldo_restante?: SortOrder
    forma_pagto_sinal_entrada?: SortOrder
    forma_pagto_saldo_restante?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type formas_pagtoSumOrderByAggregateInput = {
    id_formas_pagto?: SortOrder
    valor_sinal_entrada?: SortOrder
    qtd_parc_sinal_entrada?: SortOrder
    saldo_restante?: SortOrder
    qtd_parc_saldo_restante?: SortOrder
    valor_parc_saldo_rest?: SortOrder
  }

  export type documentosCountOrderByAggregateInput = {
    id_documentos?: SortOrder
    certidao_casamento?: SortOrder
    certidao_nascimento?: SortOrder
    comprovante_renda?: SortOrder
    conjunto_plt_imovel?: SortOrder
    escritura_assinada?: SortOrder
    laudo_itbi?: SortOrder
    manual_usuario?: SortOrder
    quadro_resumo?: SortOrder
    registro_imoveis_assinado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type documentosAvgOrderByAggregateInput = {
    id_documentos?: SortOrder
  }

  export type documentosMaxOrderByAggregateInput = {
    id_documentos?: SortOrder
    certidao_casamento?: SortOrder
    certidao_nascimento?: SortOrder
    comprovante_renda?: SortOrder
    conjunto_plt_imovel?: SortOrder
    escritura_assinada?: SortOrder
    laudo_itbi?: SortOrder
    manual_usuario?: SortOrder
    quadro_resumo?: SortOrder
    registro_imoveis_assinado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type documentosMinOrderByAggregateInput = {
    id_documentos?: SortOrder
    certidao_casamento?: SortOrder
    certidao_nascimento?: SortOrder
    comprovante_renda?: SortOrder
    conjunto_plt_imovel?: SortOrder
    escritura_assinada?: SortOrder
    laudo_itbi?: SortOrder
    manual_usuario?: SortOrder
    quadro_resumo?: SortOrder
    registro_imoveis_assinado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type documentosSumOrderByAggregateInput = {
    id_documentos?: SortOrder
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use clienteDefaultArgs instead
     */
    export type clienteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = clienteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use dados_movelDefaultArgs instead
     */
    export type dados_movelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = dados_movelDefaultArgs<ExtArgs>
    /**
     * @deprecated Use docs_modeloDefaultArgs instead
     */
    export type docs_modeloArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = docs_modeloDefaultArgs<ExtArgs>
    /**
     * @deprecated Use formas_pagtoDefaultArgs instead
     */
    export type formas_pagtoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = formas_pagtoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use documentosDefaultArgs instead
     */
    export type documentosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = documentosDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}
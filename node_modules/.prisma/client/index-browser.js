
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.22.0
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "5.22.0",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ClienteScalarFieldEnum = {
  id_cliente: 'id_cliente',
  data_inclusao: 'data_inclusao',
  data_nasc: 'data_nasc',
  nome_cliente: 'nome_cliente',
  estado_civil: 'estado_civil',
  naturalidade: 'naturalidade',
  nacionalidade: 'nacionalidade',
  escolaridade: 'escolaridade',
  profissao: 'profissao',
  situacao: 'situacao',
  cpf_cliente: 'cpf_cliente',
  rg_cliente: 'rg_cliente',
  renda_mensal: 'renda_mensal',
  comprovante_renda: 'comprovante_renda',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Dados_movelScalarFieldEnum = {
  id_dados_movel: 'id_dados_movel',
  fase_imovel: 'fase_imovel',
  nome_empreendimento: 'nome_empreendimento',
  lote_terreno: 'lote_terreno',
  area_terreno: 'area_terreno',
  matricula: 'matricula',
  logradouro: 'logradouro',
  numero: 'numero',
  complemento: 'complemento',
  bairro: 'bairro',
  cep: 'cep',
  cidade: 'cidade',
  estado: 'estado',
  num_casa: 'num_casa',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Docs_modeloScalarFieldEnum = {
  id_docs_modelo: 'id_docs_modelo',
  boleto_pagto_escritura: 'boleto_pagto_escritura',
  boleto_pagto_escritura_itbi: 'boleto_pagto_escritura_itbi',
  boleto_pagto_escritura_registro: 'boleto_pagto_escritura_registro',
  promessa_compra_venda_assinado: 'promessa_compra_venda_assinado',
  promessa_compra_venda_modelo: 'promessa_compra_venda_modelo',
  promessa_compra_venda_preenchido: 'promessa_compra_venda_preenchido',
  quadro_resumo_modelo: 'quadro_resumo_modelo',
  requerimento_cartorio_modelo: 'requerimento_cartorio_modelo',
  requerimento_cartorio_preenchido: 'requerimento_cartorio_preenchido',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Formas_pagtoScalarFieldEnum = {
  id_formas_pagto: 'id_formas_pagto',
  valor_sinal_entrada: 'valor_sinal_entrada',
  qtd_parc_sinal_entrada: 'qtd_parc_sinal_entrada',
  data_venc_sinal_entada: 'data_venc_sinal_entada',
  saldo_restante: 'saldo_restante',
  qtd_parc_saldo_restante: 'qtd_parc_saldo_restante',
  valor_parc_saldo_rest: 'valor_parc_saldo_rest',
  data_vencto_parc_saldo_restante: 'data_vencto_parc_saldo_restante',
  forma_pagto_sinal_entrada: 'forma_pagto_sinal_entrada',
  forma_pagto_saldo_restante: 'forma_pagto_saldo_restante',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentosScalarFieldEnum = {
  id_documentos: 'id_documentos',
  certidao_casamento: 'certidao_casamento',
  certidao_nascimento: 'certidao_nascimento',
  comprovante_renda: 'comprovante_renda',
  conjunto_plt_imovel: 'conjunto_plt_imovel',
  escritura_assinada: 'escritura_assinada',
  laudo_itbi: 'laudo_itbi',
  manual_usuario: 'manual_usuario',
  quadro_resumo: 'quadro_resumo',
  registro_imoveis_assinado: 'registro_imoveis_assinado',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  cliente: 'cliente',
  dados_movel: 'dados_movel',
  docs_modelo: 'docs_modelo',
  formas_pagto: 'formas_pagto',
  documentos: 'documentos'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
